{"version":3,"sources":["components/OriginHomeComponent.js","services/UserServer.js","components/home/ClubRowComponent.js","services/ClubService.js","components/home/ClubListComponent.js","components/home/HomeAboutComponent.js","components/club-page/ClubEventListComponent.js","components/club-page/ClubMemberListComponent.js","components/club-page/ClubSongListComponent.js","components/club-page/ClubAboutComponent.js","components/club-page/CLubContactComponent.js","services/EventService.js","containers/EventListContainer.js","components/club-page/ClubPageComponent.js","components/login/ClubLoginComponent.js","components/register/RegisterComponent.js","components/ClubPageSetting/DesignAboutComponent.js","components/worksite/LeaderWorksiteComponent.js","components/ClubPageSetting/DesignContactComponent.js","components/ClubPageSetting/DesignCLubHomePageComponent.js","components/home/ClubTabsComponent.js","components/home/ClubTaskListComponent.js","reducer/ClubReducer.js","containers/ClubListContainer.js","search/MovieSearchComponent.js","components/home/MovieListComponent.js","components/home/HomeComponent.js","components/profile/ProfileComponent.js","search/MovieDetailsComponent.js","components/WhiteBoard.js","App.js","serviceWorker.js","reducer/EventReducer.js","index.js"],"names":["OriginHomeComponent","className","to","fetchProfile","fetch","method","credentials","then","response","json","ClubRowComponent","state","editing","club","props","isPresident","user","username","updateClubName","newName","setState","prevState","name","updateClubCategory","newCategory","category","updateClubPresident","newPresident","president","catch","e","currentUser","this","id","onChange","event","target","value","defaultValue","onClick","updateClub","aria-hidden","deleteClub","React","Component","createClub","newClub","body","JSON","stringify","headers","findAllClubs","cid","ClubListComponent","clubs","newClubName","newClubCategory","newClubPresident","console","log","map","key","placeholder","HomeAboutComponent","ClubEventListComponent","newEventName","editingEvent","updateEventName","updateEventTime","newTime","time","updateEventLocation","newLocation","location","updateEventContent","newContent","Content","match","params","clubId","findEventsForClub","events","content","htmlFor","type","updateEvent","deleteEvent","newEventTime","newEventLocation","newEventContent","createEvent","ClubMemberListComponent","members","userList","users","ClubSongListComponent","ClubAboutComponent","CLubContactComponent","createAEvent","newEvent","eid","eventId","EventListContainer","connect","ownProps","EventReducer","newEventTitle","dispatch","actualEvents","actualEvent","status","newEventData","updatedEvent","ClubPageComponent","tab","setTabs","history","push","logout","userType","prevProps","snapshot","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ClubLoginComponent","password","login","title","href","RegisterComponent","verifiedPassword","phone","gender","email","movieList","error","register","DesignAboutComponent","DesignContactComponent","flag","DesignCLubHomePageComponent","tabs","initialState","newClubTitle","ClubReducer","action","actualClubs","filter","updatedClub","ClubListContainer","actualClub","newClubData","MovieSearchComponent","movies","searchTitle","searchMovies","results","Search","movie","i","imdbID","Title","MovieListComponent","imdb","HomeComponent","ProfileComponent","update","deleteMovie","mid","role","readOnly","newPassword","checked","newPhone","newEmail","MovieDetailsComponent","liked","addMovie","userid","newMovie","Actors","Director","Plot","split","actor","index","src","Poster","WhiteBoard","path","exact","component","App","Boolean","window","hostname","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0b572ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst OriginHomeComponent = () =>\r\n    <div>\r\n        <h2>Origin</h2>\r\n        <br/>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/home/introduction'>\r\n                Home\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/search'>\r\n                Search Movie\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/profile'>\r\n                Profile\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/login'>\r\n                Login\r\n            </Link>\r\n        </div>\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/register'>\r\n                Register\r\n            </Link>\r\n        </div>\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/club-list'>\r\n                Club List\r\n            </Link>\r\n        </div>\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/club-page/events'>\r\n                Club Page\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/member-list'>\r\n                Member List\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/leader-worksite'>\r\n                Leader Worksite\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"list-group\">\r\n            <Link className=\"list-group-item\" to='/member-list/setting'>\r\n                Club Setting\r\n            </Link>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\nexport default OriginHomeComponent","export const updateUser = (userId, user) =>\r\n    fetch(`http://localhost:8080/api/users/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n    },\r\n        credentials: \"include\"\r\n})\r\n        .then(response => response.json())\r\n\r\nexport const fetchProfile = () =>\r\n    fetch(\"http://localhost:8080/api/profile\", {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\n\r\nexport default class ClubRowComponent extends React.Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        club: this.props.club,\r\n        isPresident: false,\r\n        user: {},\r\n        username: ''\r\n        // newClubTitle: 'New Club',\r\n        // editingClub: {}\r\n    }\r\n\r\n    updateClubName = (newName) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                name: newName\r\n            }\r\n        }))\r\n\r\n    updateClubCategory = (newCategory) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                category: newCategory\r\n            }\r\n        }))\r\n\r\n    updateClubPresident = (newPresident) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                president: newPresident\r\n            }\r\n        }))\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        username: currentUser.username,\r\n                        isPresident: this.props.club.president === currentUser.username\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n// {console.log(this.props.user.username === this.props.club.president)}\r\n\r\n    render() {\r\n        return (\r\n\r\n            <tr>\r\n                {/*{console.log(this.state.username)}*/}\r\n                {/*{console.log(this.state.isPresident)}*/}\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                            {this.state.club.name}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateClubName(event.target.value)}\r\n                            defaultValue={this.state.club.name}/>\r\n                    }\r\n                </td>\r\n                <td className=\"d-none d-lg-block\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                            {this.state.club.category}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateClubCategory(event.target.value)}\r\n                            defaultValue={this.state.club.category}/>\r\n                    }\r\n\r\n                </td>\r\n                <td>\r\n                    {/*<a*/}\r\n                    {/*href=\"../club-page/club-page.template.client.html\">*/}\r\n                    {/*    defaultValue={this.state.club.president}*/}\r\n\r\n                        {\r\n                            !this.state.editing &&\r\n                            <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                                {this.props.club.president}\r\n                            </Link>\r\n                        }\r\n                        {\r\n                            this.state.editing &&\r\n                            <input\r\n                                className=\"form-control\"\r\n                                onChange={(event) => this.updateClubPresident(event.target.value)}\r\n                                defaultValue={this.props.club.president}/>\r\n                        }\r\n                {/*</a>*/}\r\n\r\n                {/*    {*/}\r\n                {/*        !this.state.editing &&*/}\r\n                {/*        <Link to={`/club-page/${this.state.club.id}/events`}>*/}\r\n                {/*            {this.state.club.president}*/}\r\n                {/*        </Link>*/}\r\n                {/*    }*/}\r\n                {/*    {*/}\r\n                {/*        this.state.editing &&*/}\r\n                {/*        <input*/}\r\n                {/*            className=\"form-control\"*/}\r\n\r\n                {/*            value={this.state.club.president}/>*/}\r\n                {/*    }*/}\r\n                </td>\r\n                <td>\r\n                    {\r\n                        !this.state.editing && this.state.isPresident &&\r\n                        // (this.props.user.username === this.props.club.president) &&\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.setState({editing: true})}>\r\n                            Edit\r\n                        </button>\r\n                    }\r\n                    {this.state.editing &&\r\n                    <div className={`nav-link active`}>\r\n\r\n                        <button className=\"btn btn-success add-margin3\"\r\n                                onClick={() => {\r\n                                    this.props.updateClub(this.state.club.id, this.state.club)\r\n                                    this.setState({editing: false})\r\n                                }}>\r\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger\"\r\n                                onClick={() => this.props.deleteClub(this.state.club.id)}\r\n                        >\r\n                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// in onClick: this.props.updateClub(this.state.editingClub._id, this.state.editingClub)\r\n// onClick={() => this.props.deleteClub(Club._id)}\r\n// update name: onChange={(event) => this.updateCourseTitle(event.target.value)}","export const createClub = (newClub) =>\r\n    fetch(`http://localhost:8080/api/clubs`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newClub),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllClubs = () =>\r\n    fetch(`http://localhost:8080/api/clubs`)\r\n        .then(response => response.json())\r\n\r\nexport const deleteClub = (cid) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport const updateClub = (cid, newClub) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newClub),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createClub,\r\n    findAllClubs,\r\n    deleteClub,\r\n    updateClub\r\n}","import React from \"react\";\r\nimport '../css/ClubListComponent.css'\r\nimport ClubRowComponent from \"./ClubRowComponent\";\r\nimport ClubService from \"../../services/ClubService\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport default class ClubListComponent extends React.Component {\r\n    state = {\r\n        clubs: [],\r\n        newClubName: '',\r\n        newClubCategory: '',\r\n        newClubPresident: '',\r\n        user: this.props.user,\r\n        username: this.props.user.username\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        console.log(this.state)\r\n        this.props.findAllClubs()\r\n        console.log(this.props)\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps)\r\n    //     console.log(this.props)\r\n    //     console.log(prevProps.params !== this.props.params)\r\n    //     if (prevProps.params !== this.props.params) {\r\n    //         this.props.findAllClubs()\r\n    //     }\r\n    // }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     ClubService.findAllClubs()\r\n    //         .then(actualArrayOfClubs =>\r\n    //             this.setState({\r\n    //                 clubs: actualArrayOfClubs\r\n    //             }))\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {console.log(this.props.user.username)}\r\n                <table className=\"table table-striped \">\r\n\r\n                    <thead>\r\n                    <tr className=\"table-dark\">\r\n                        <th>Club Name</th>\r\n                        <th className=\"d-none d-lg-block\">Category</th>\r\n                        <th>President</th>\r\n                        <th><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n\r\n                    <tbody>\r\n\r\n                    {\r\n                        !this.props.user.username &&\r\n                        this.props.clubs.map(club =>\r\n                            <ClubRowComponent\r\n                                // deleteclub={this.props.deleteclub}\r\n                                key={club.id}\r\n                                club={club}\r\n\r\n                                deleteClub={this.props.deleteClub}\r\n                                updateClub={this.props.updateClub}/>\r\n                        )}\r\n                    {//when user exist\r\n                        this.props.user.username &&\r\n                        this.props.user.clubs.map(club =>\r\n                            <ClubRowComponent\r\n                                // deleteclub={this.props.deleteclub}\r\n                                key={club.id}\r\n                                club={club}\r\n                                user={this.state.user}\r\n                                deleteClub={this.props.deleteClub}\r\n                                updateClub={this.props.updateClub}/>\r\n                        )}\r\n                    {}\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                onChange={(event) => this.setState({\r\n                                    newClubName: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubName}\r\n                                placeholder=\"New Name\"/>\r\n                        </td>\r\n                        <td className=\"d-none d-lg-block\">\r\n                            <input\r\n                                onChange={(event) => this.setState({\r\n                                    newClubCategory: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubCategory}\r\n                                placeholder=\"New Category\"/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                className=\"add-margin3\"\r\n                                onChange={(event) => this.setState({\r\n                                    newClubPresident: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubPresident}\r\n                                placeholder=\"New Category\"/>\r\n                        </td>\r\n                        <td>\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={() => {\r\n                                        this.props.createClub(\r\n                                            {\r\n                                                name: this.state.newClubName,\r\n                                                category: this.state.newClubCategory,\r\n                                                president: this.state.newClubPresident,\r\n\r\n                                            });\r\n                                        this.props.findAllClubs();\r\n                                    }\r\n                                    }>\r\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default class HomeAboutComponent extends React.Component{\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <span>Intro to app</span>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ClubEventListComponent extends React.Component {\r\n    state = {\r\n        // event: this.props.event,\r\n        newEventName: 'New Event',\r\n        // newEventTime: '',\r\n        // newEventLocation: '',\r\n        // newEventContent: '',\r\n        editingEvent: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.clubId)\r\n        console.log(this.state)\r\n        this.props.findEventsForClub(this.props.match.params.clubId)\r\n        console.log(this.props)\r\n    }\r\n\r\n    updateEventName = (newName) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                name: newName\r\n            }\r\n        }))\r\n\r\n    updateEventTime = (newTime) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                time: newTime\r\n            }\r\n        }))\r\n\r\n    updateEventLocation = (newLocation) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                location: newLocation\r\n            }\r\n        }))\r\n\r\n    updateEventContent = (newContent) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                Content: newContent\r\n            }\r\n        }))\r\n\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps)\r\n    //     console.log(this.props)\r\n    //     console.log(prevProps.clubId !== this.props.clubId)\r\n    //     //todo: may cause update issue\r\n    //     // if (prevProps.match.params !== this.props.match.params) {\r\n    //     if (false) {\r\n    //         this.props.findEventsForClub(this.props.match.params.clubId)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h2>Events</h2>\r\n                <br/>\r\n                <ul className=\"list-group\">\r\n                    {/*<li className=\"list-group-item\">*/}\r\n                    {/*    <h4>Event 1</h4>*/}\r\n                    {/*<p>am</p>*/}\r\n                    {/*<p>1111</p>*/}\r\n                    {/*<p>test</p>*/}\r\n                    {/*</li>*/}\r\n\r\n                    {\r\n                        //use input date for where\r\n                        this.props.events.map(event =>\r\n                            <li className=\"list-group-item\"\r\n                                key={event.id}>\r\n                                <div>\r\n                                    {\r\n                                        this.state.editingEvent.id !== event.id &&\r\n                                        <div>\r\n                                            <h4>{event.name}</h4>\r\n                                            <p>When: {event.time}</p>\r\n                                            <p>Location: {event.location}</p>\r\n                                            <p>{event.content}</p>\r\n                                            {this.props.user.username == this.props.club.president &&\r\n                                            <button\r\n                                                className=\"btn btn-primary\"\r\n                                                onClick={() => this.setState({editingEvent: event})}>\r\n                                                Edit\r\n                                            </button>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.editingEvent.id === event.id &&\r\n                                    <div>\r\n                                        {console.log(this.state.editingEvent.id)}\r\n                                        {console.log(event.id)}\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventName\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Event:\r\n                                            </label>\r\n                                            <input\r\n                                                onChange={(e) => {\r\n                                                    const newName = e.target.value\r\n                                                    this.setState(prevState => ({\r\n                                                        editingEvent: {\r\n                                                            ...prevState.editingEvent,\r\n                                                            name: newName\r\n                                                        }\r\n                                                    }));\r\n                                                    this.updateEventName(e.target.value)\r\n                                                }}\r\n                                                className=\"form-control font-italic\"\r\n                                                defaultValue={this.state.editingEvent.name}\r\n                                                id=\"eventName\"\r\n                                                type={'text'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventTime\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                When:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newTime = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        time: newTime\r\n                                                    }\r\n                                                }));\r\n                                                this.updateEventTime(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.time}\r\n                                                   id=\"eventTime\"\r\n                                                   type={'date'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventLocation\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Location:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newLocation = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        location: newLocation\r\n                                                    }\r\n                                                }));\r\n                                                    this.updateEventLocation(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.location}\r\n                                                   id=\"eventLocation\"\r\n                                                   type={'text'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventContent\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Content:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newContent = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        content: newContent\r\n                                                    }\r\n                                                }));\r\n                                                this.updateEventContent(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.content}\r\n                                                   id=\"eventContent\"\r\n                                                   type={'text'}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <button className=\"btn btn-success add-margin3\"\r\n                                                onClick={() => {\r\n                                                    this.props.updateEvent(this.state.editingEvent.id, this.state.editingEvent)\r\n                                                    this.setState({editingEvent: {}})\r\n                                                }}>\r\n                                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n\r\n                                        <button className=\"btn btn-danger\"\r\n                                                onClick={() => {\r\n                                                    this.props.deleteEvent(event.id);\r\n                                                    this.props.findEventsForClub(this.props.match.params.clubId);\r\n                                                    this.setState({editingEvent: {}});\r\n                                                }}\r\n                                        >\r\n                                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    {this.props.user.username == this.props.club.president &&\r\n                    <li className=\"list-group-item\">\r\n                        <h4>New Event</h4>\r\n                        <div>\r\n                            <label htmlFor=\"eventName\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Event:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventName: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventName}\r\n                                   placeholder=\"New Name\"\r\n                                   id=\"eventName\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventTime\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                When:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventTime: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventTime}\r\n                                   id=\"eventTime\"\r\n                                   type={'date'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventLocation\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Location:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventLocation: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventLocation}\r\n                                   placeholder=\"New Address\"\r\n                                   id=\"eventLocation\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventContent\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Content:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventContent: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventContent}\r\n                                   placeholder=\"New Content\"\r\n                                   id=\"eventContent\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <button className=\"btn btn-danger float-right\"\r\n                                    onClick={() => {\r\n                                        this.props.createEvent(\r\n                                            this.props.match.params.clubId,\r\n                                            {\r\n                                                name: this.state.newEventName,\r\n                                                time: this.state.newEventTime,\r\n                                                location: this.state.newEventLocation,\r\n                                                content: this.state.newEventContent\r\n                                            });\r\n                                        //this.props.findEventsForClub(this.props.match.params.clubId);\r\n                                        this.setState({editingEvent: {}});\r\n                                    }}>\r\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n\r\n\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n//update: onChange={(event) => this.updateClubName(event.target.value)}\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default class ClubMemberListComponent extends React.Component {\r\n\r\n    state = {\r\n        members: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`http://localhost:8080/api/users`)\r\n            .then(response => response.json())\r\n            .then(userList => {\r\n                if (userList) {\r\n                    this.setState({\r\n                        users: userList,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table table-striped \">\r\n                {console.log(this.state.users)}\r\n                <h2>Members</h2>\r\n                <ul className=\"list-group\">\r\n\r\n                    {this.state.users.map(user =>\r\n                        <li className=\"list-group-item\">\r\n                            <Link to={`/profile/${this.user.id}`}>{user.username}</Link>\r\n                        </li>\r\n                    )\r\n\r\n\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class ClubSongListComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h3>Choose a song for meeting!</h3>\r\n                <br/>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Song 1</li>\r\n                    <li className=\"list-group-item\">Song 2</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubAboutComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <span>Intro about club</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class CLubContactComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h5> Meeting time: </h5>\r\n                <h5> Location: </h5>\r\n                <h5> Email: </h5>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const findEventsForClub = (cid) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}/events`)\r\n        .then(response => response.json())\r\n\r\nexport const createAEvent = (cid, newEvent) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}/events`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newEvent),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteEvent = (eid) =>\r\n    fetch(`http://localhost:8080/api/events/${eid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const updateEvent = (eventId, newEvent) =>\r\n    fetch(`http://localhost:8080/api/events/${eventId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newEvent),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findEventsForClub,\r\n    createAEvent,\r\n    deleteEvent,\r\n    updateEvent\r\n}","import {connect} from \"react-redux\";\r\nimport ClubEventListComponent from \"../components/club-page/ClubEventListComponent\";\r\nimport {findEventsForClub, createAEvent, deleteEvent, updateEvent} from \"../services/EventService\";\r\nimport {createClub} from \"../services/ClubService\";\r\n\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n   // console.log(this.params)\r\n    console.log(ownProps)\r\n    return {\r\n        events: state.EventReducer.events,\r\n        newEventTitle: state.EventReducer.newEventTitle,\r\n        params: ownProps.params\r\n        // ownProps: ownProps\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    findEventsForClub: (clubId) => {\r\n        findEventsForClub(clubId)\r\n            .then(actualEvents => dispatch({\r\n                type: \"FIND_EVENTS_FOR_CLUB\",\r\n                actualEvents\r\n            }))\r\n    },\r\n    createEvent: (cid, newEvent) =>\r\n        createAEvent(cid, newEvent)\r\n            .then(actualEvent => dispatch({\r\n                type: 'CREATE_EVENT',\r\n                newEvent: actualEvent\r\n            })),\r\n    deleteEvent: (eventId) =>\r\n        deleteEvent(eventId)\r\n            .then(status => dispatch({\r\n                type: \"DELETE_EVENT\",\r\n                eventId: eventId\r\n            })),\r\n    updateEvent: (eventId, newEventData) => {\r\n        updateEvent(eventId, newEventData)\r\n            .then(status => dispatch({\r\n                type: 'UPDATE_EVENT',\r\n                updatedEvent: newEventData\r\n            }))\r\n    }\r\n})\r\n\r\nconst EventListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ClubEventListComponent)\r\n\r\nexport default EventListContainer","import React from \"react\";\r\nimport HomeAboutComponent from \"../home/HomeAboutComponent\";\r\nimport ClubEventListComponent from \"./ClubEventListComponent\";\r\nimport ClubMemberListComponent from \"./ClubMemberListComponent\";\r\nimport ClubSongListComponent from \"./ClubSongListComponent\";\r\nimport ClubAboutComponent from \"./ClubAboutComponent\";\r\nimport CLubContactComponent from \"./CLubContactComponent\";\r\nimport EventListContainer from \"../../containers/EventListContainer\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\n\r\n\r\nexport default class ClubPageComponent extends React.Component{\r\n\r\n    state = {\r\n        president: false,\r\n        tab: this.props.match.params.tab,  //events member-list song-list about contact\r\n        user: {},\r\n        username: '',\r\n        club:{}\r\n    }\r\n\r\n    setTabs = (tab) => {\r\n        //console.log(this.props.match.params.tab)\r\n        this.props.history.push(`/club-page/${tab}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match)\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        userType: 'member'\r\n                    })\r\n                }\r\n            })\r\n        fetch(`http://localhost:8080/api/clubs/${this.props.match.params.clubId}`)\r\n            .then(response => response.json())\r\n            .then(club => {\r\n                this.setState(\r\n                    {\r\n                        club: club\r\n                    }\r\n                )\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(this.state.club.users)\r\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n            this.setState({\r\n                tab: this.props.match.params.tab\r\n            })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(\"http://localhost:8080/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {console.log(this.state.club.president)}\r\n\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            {this.state.club.name} ({this.state.user.username})</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"events\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('events')}\r\n                                        >\r\n                                            Events\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"member-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('member-list')}\r\n                                        >\r\n                                            Member List\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"song-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('song-list')}\r\n                                        >\r\n                                            Songs\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"about\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('about')}\r\n                                        >\r\n                                            About\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"contact\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('contact')}\r\n                                        >\r\n                                            Contact\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n                    {this.state.user.username &&\r\n                        <div className=\"col-1\">\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={this.logout}>\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </nav>\r\n\r\n\r\n                {this.state.tab === 'events' &&\r\n                <div>\r\n                    <EventListContainer\r\n                        match={this.props.match}\r\n                        history={this.props.history}\r\n                        user={this.state.user}\r\n                        club={this.state.club}\r\n                    />\r\n                </div>}\r\n\r\n                {this.state.tab === 'member-list' &&\r\n                <div>\r\n                    <ClubMemberListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'song-list' &&\r\n                <div>\r\n                    <ClubSongListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'about' &&\r\n                <div>\r\n                    <ClubAboutComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'contact' &&\r\n                <div>\r\n                    <CLubContactComponent/>\r\n                </div>}\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ClubLoginComponent extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    login = () => {\r\n        fetch(\"http://localhost:8080/api/login\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .catch(e => {\r\n                this.props.history.push(\"/login\")\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser)\r\n                    //todo: go to home page\r\n                    this.props.history.push(\"/profile\")\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>Login</h1>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"Someone\"\r\n                               title=\"Use this username to login\"\r\n                               onChange={(e) => this.setState({username: e.target.value})}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({password: e.target.value})}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        <Link to={'./profile'}>\r\n                            <button className=\"btn btn-primary form-control\"\r\n                                    onClick={this.login}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <a className=\"float-right\"\r\n                           href=\"./register\">\r\n                            Register\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport ClubService from \"../../services/ClubService\";\r\nimport ClubPageComponent from \"../club-page/ClubPageComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class RegisterComponent extends React.Component {\r\n\r\n    //todo: if register as president, add new club. If register as member, check club name.\r\n\r\n    state = {\r\n        username: 'hi',\r\n        password: '',\r\n        verifiedPassword: '',\r\n        phone: '',\r\n        gender: '',\r\n        email: '',\r\n        movieList: [],\r\n        error: null\r\n    }\r\n\r\n\r\n    //todo: throw error when the username and password is empty\r\n    register = () => {\r\n        console.log(this.state.user)\r\n        fetch(\"http://localhost:8080/api/register\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                phone: this.state.phone,\r\n                gender: this.state.gender,\r\n                email: this.state.email,\r\n                movieList: this.state.movieList\r\n\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Unable to register'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.props.history.push(\"/profile\")\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>Register</h1>\r\n\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"Someone\"\r\n                               title=\"Use this username to login\"\r\n                               // onChange={(e) => {\r\n                               //     const newUsername = e.target.value\r\n                               //     this.setState(prevState => ({\r\n                               //         user: {\r\n                               //             // ...prevState.user,\r\n                               //             username: newUsername\r\n                               //         }\r\n                               //     }));\r\n                               // }}\r\n                               onChange={(e) => this.setState({username: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({password: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"clubName\"\r\n                           className=\"col-sm-2 col-form-label\">Club Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                            // onChange={(e) => {\r\n                            //     const newClubName = e.target.value\r\n                            //     this.setState(prevState => ({\r\n                            //         user: {\r\n                            //             ...prevState.user,\r\n                            //             password: newPassword\r\n                            //         }\r\n                            //     }));\r\n                            // }}\r\n                               value={this.state.newClubName}\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"clubName\"\r\n                               placeholder=\"Some Club\"\r\n                               title=\"club you want to join in\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*<div className=\"form-group row\">*/}\r\n                {/*    <label htmlFor=\"category\"*/}\r\n                {/*           className=\"col-sm-2 col-form-label\">Category</label>*/}\r\n                {/*    <div className=\"col-sm-10\">*/}\r\n                {/*        <input type=\"text\"*/}\r\n                {/*               className=\"form-control\"*/}\r\n                {/*               id=\"category\"*/}\r\n                {/*               placeholder=\"Club Type\"/>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<div className=\"form-group row\">*/}\r\n                {/*    <label htmlFor=\"role\"*/}\r\n                {/*           className=\"col-sm-2 col-form-label\">Role</label>*/}\r\n                {/*    <div className=\"col-sm-10\">*/}\r\n                {/*        <select className=\"custom-select\"*/}\r\n                {/*                title=\"What's your role in a club?\">*/}\r\n                {/*            <option defaultValue=\"President\">President</option>*/}\r\n                {/*            <option value=\"Member\">Member</option>*/}\r\n                {/*        </select>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"verifyPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Verify Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password-verify\"\r\n                               id=\"verifyPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({verifiedPassword: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Gender</label>\r\n                    <div className=\"col-sm-4 custom-control custom-radio\">\r\n                        <input type=\"checkbox\"\r\n                               className=\"custom-control-input\"\r\n                               id=\"male\"\r\n                               name=\"gender\"\r\n                               onChange={(e) => this.setState({gender: 'male'})}\r\n                        />\r\n                        <label htmlFor=\"male\" className=\"custom-control-label\">Male</label>\r\n                    </div>\r\n                    <div className=\"custom-control col-sm-5 custom-radio\">\r\n                        <input type=\"checkbox\"\r\n                               className=\"custom-control-input\"\r\n                               id=\"female\"\r\n                               name=\"gender\"\r\n                               onChange={(e) => this.setState({gender:'female'})}\r\n                        />\r\n                        <label htmlFor=\"female\" className=\"custom-control-label\">Female</label>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"phone\"\r\n                           className=\"col-sm-2 col-form-label\">Phone</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-phone\"\r\n                               id=\"phone\"\r\n                               placeholder=\"(xxx)-xxx-xxxx\"\r\n                               onChange={(e) => this.setState({phone: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\"\r\n                           className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-email\"\r\n                               id=\"email\"\r\n                               placeholder=\"example@gmail.com\"\r\n                               onChange={(e) => this.setState({email: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n\r\n                        <Link to={`/profile`}>\r\n                            <button className=\"btn btn-primary form-control\"\r\n\r\n                                    onClick={\r\n                                        //check if password are the same\r\n                                        this.register\r\n                                    }\r\n                            >\r\n                                Register\r\n                            </button>\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col\">\r\n                        <a className=\"float-left wbdv-link wbdv-login\"\r\n                           href=\"./login\">\r\n                            Login\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <Link className=\"float-right\"\r\n                              to=\"/home/introduction\">\r\n                            Cancel\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// onClick={\r\n// () => this.addName(this.state.newClubName)}","import React from \"react\";\r\n\r\nexport default class DesignAboutComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Edit Club Introduction</h2>\r\n                <br/>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"fetch introduction from server\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//setting: about, recourse, contact info, club calendar, member list\r\n\r\nexport default class LeaderWorksiteComponent extends React.Component{\r\n    state = {\r\n        tabs: this.props.match.params.tabs,\r\n    }\r\n\r\n    setTabs = (tabs, select) => {\r\n        this.props.history.push(`/${tabs}/leader-worksite`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tabs !== this.props.match.params.tabs) {\r\n            this.setState({\r\n                tabs: this.props.match.params.tabs\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            Worksite</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Assign Tasks <span\r\n                                        className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Calendar </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Add Event</a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"./member-list/setting\">Setting</a>\r\n                            </li>\r\n                            {/*<li className=\"nav-item active\">*/}\r\n                            {/*    <a className=\"nav-link\" href=\"#\">*/}\r\n                            {/*        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i></a>*/}\r\n                            {/*</li>*/}\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-1 float-right\">\r\n                        <button className=\"float-right btn btn-lg btn-secondary\">\r\n                            <i className=\"fa fa-user white-icon\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n                </nav>\r\n\r\n\r\n                <h2>Assign Tasks</h2>\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n                    <div className=\"card \">\r\n                        <div className=\"card-header\">\r\n                            Member 1\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\">Task 1</li>\r\n                            <li className=\"list-group-item\">Task 2</li>\r\n                            <li className=\"list-group-item\">Task 3</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default class DesignContactComponent extends React.Component {\r\n    state = {\r\n        flag: true\r\n    }\r\n\r\n//email phone number, twitter, address\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            {this.state.flag === true &&\r\n        <div className=\"contain-fluid\">\r\n            <div className=\"row\">\r\n                <label htmlFor=\"email\"> Email </label>\r\n                <input className=\"form-control\"\r\n                       type=\"email\"\r\n                       id=\"email\"\r\n                       placeholder=\"example@gmail.com\"/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport ClubMemberListComponent from \"../club-page/ClubMemberListComponent\";\r\nimport DesignAboutComponent from \"./DesignAboutComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DesignContactComponent from \"./DesignContactComponent\";\r\nimport '../css/DesignClubHomPageComponent.css'\r\n\r\n\r\n//todo: use a container instead?\r\n\r\nexport default class DesignCLubHomePageComponent extends React.Component{\r\n    state = {\r\n        tabs: this.props.match.params.tabs,\r\n    }\r\n\r\n    setTabs = (tabs) => {\r\n        this.props.history.push(`/${tabs}/setting`);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tabs !== this.props.match.params.tabs) {\r\n            this.setState({\r\n                tabs: this.props.match.params.tabs\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            Club Setting</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item active\">\r\n                                {\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"member-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('member-list', true)}>\r\n                                            Member List\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">CLub Calendar </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"about\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('about',true)}>\r\n                                            About\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Feature</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"contact\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('contact')}>\r\n                                            Contact\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n\r\n                            </li>\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-1 float-right\">\r\n                        <Link to={`/leader-worksite`}>Back to Worksite</Link>\r\n                    </div>\r\n\r\n\r\n                </nav>\r\n\r\n                {this.state.tabs === 'member-list' &&\r\n                <div>\r\n                    <ClubMemberListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tabs === 'about' &&\r\n                <div>\r\n                    <DesignAboutComponent/>\r\n                </div>}\r\n\r\n                {this.state.tabs === 'contact' &&\r\n                <div>\r\n                    <DesignContactComponent/>\r\n                </div>}\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubTabsComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2 id=\"Clubs \">Clubs</h2>\r\n\r\n                <ul className=\"nav nav-tabs wbdv-Club-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"#\">Club 1</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Club 2</a>\r\n                    </li>\r\n                </ul>\r\n                <br/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubTaskListComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"list-group\">\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">Task 1</h5>\r\n                        </div>\r\n                        <p className=\"mb-1\">Task 1 description</p>\r\n                    </a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">Task 2</h5>\r\n                        </div>\r\n                        <p className=\"mb-1\">Task 2 description</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","const initialState = {\r\n    newClubTitle: 'New Club',\r\n    clubs: [\r\n    ]\r\n}\r\n\r\nconst ClubReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FIND_ALL_CLUBS\":\r\n            return {\r\n                ...state,\r\n                clubs: action.actualClubs\r\n            }\r\n\r\n\r\n        case \"CREATE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: [...state.clubs, action.newClub]\r\n            }\r\n\r\n        case \"DELETE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: state.clubs.filter(club => club.id !== action.clubId)\r\n            }\r\n\r\n        case \"UPDATE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: state.clubs.map(\r\n                    club => club.id === action.updatedClub.id ?\r\n                        action.updatedClub : club )\r\n            }\r\n\r\n        // case \"UPDATE_CLUB\":\r\n        //     return {\r\n        //         ...state,\r\n        //         clubs: state.clubs.map(\r\n        //             club => club._id === action.updatedclub._id ?\r\n        //                 action.updatedclub : club )\r\n        //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ClubReducer\r\n","import ClubReducer from \"../reducer/ClubReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllClubs, createClub, deleteClub, updateClub} from \"../services/ClubService\";\r\nimport ClubListComponent from \"../components/home/ClubListComponent\";\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    //clubs: state.clubReducer.clubs\r\n    return {\r\n        // clubs: state.ClubReducer.clubs,\r\n        clubs: state.ClubReducer.clubs,\r\n        // clubs: state.ClubReducer.clubs,\r\n        newClubTitle: state.ClubReducer.newClubTitle,\r\n        //params: ownProps.params\r\n        // ownProps: ownProps\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n\r\n    findAllClubs: () => {\r\n        findAllClubs()\r\n            .then(actualClubs => dispatch({\r\n                type: \"FIND_ALL_CLUBS\",\r\n                actualClubs\r\n            }))\r\n    },\r\n\r\n    createClub: (newClub) =>\r\n        createClub(newClub)\r\n            .then(actualClub => dispatch({\r\n                type: 'CREATE_CLUB',\r\n                newClub: actualClub\r\n            })),\r\n\r\n    deleteClub: (clubId) =>\r\n        deleteClub(clubId)\r\n            .then(status => dispatch({\r\n                type: \"DELETE_CLUB\",\r\n                clubId: clubId\r\n            })),\r\n\r\n\r\n    updateClub: (clubId, newClubData) => {\r\n        updateClub(clubId, newClubData)\r\n            .then(status => dispatch({\r\n                type: 'UPDATE_club',\r\n                updatedClub: newClubData\r\n            }))\r\n    },\r\n\r\n\r\n\r\n\r\n})\r\n\r\nconst ClubListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ClubListComponent)\r\n\r\nexport default ClubListContainer\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile} from \"../services/UserServer\";\r\n\r\nexport default class MovieSearchComponent extends React.Component {\r\n\r\n    // http://www.omdbapi.com/?i=tt3896198&apikey=68d96315\r\n\r\n    state = {\r\n        movies: [\r\n            {title: \"Avatar\"},\r\n            {title: \"Aliens\"},\r\n            {title: \"Titanic\"},\r\n            {title: \"Terminator 2\"}\r\n        ],\r\n\r\n        searchTitle: '',\r\n        error: null,\r\n        user: {},\r\n        username: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let searchTitle = this.props.match.params.searchTitle;\r\n        console.log(searchTitle)\r\n        if (!searchTitle)\r\n            searchTitle = 'Titanic'\r\n        fetch(`http://www.omdbapi.com/?s=${searchTitle}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                    this.setState({\r\n                        movies: results.Search,\r\n                        searchTitle: searchTitle\r\n                    })\r\n                    if (this.state.movies == null) {\r\n                        this.setState({\r\n                            error: 'Unable to find movie'\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({user: currentUser})\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    searchMovies = (title) => {\r\n        this.props.history.push(`/search/${title}`)\r\n        fetch(`http://www.omdbapi.com/?s=${title}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                    this.setState({\r\n                        movies: results.Search\r\n                    })\r\n                    if (results !== null) {\r\n                        this.setState({\r\n                            error: 'Unable to find movie'\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to={'/profile'}>\r\n                    <button className={'btn btn-primary'}>\r\n                        Profile\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                <h2>Search Movies {this.state.user.username}</h2>\r\n                {console.log(this.state.movies)}\r\n                {console.log(this.state.error)}\r\n\r\n                {\r\n                    this.state.movies === null &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n\r\n\r\n                <div className={'row'}>\r\n                    <div className={'col-9'}>\r\n                        <input\r\n                            className={`form-control add-margin3`}\r\n                            onChange={e => this.setState({searchTitle: e.target.value})}\r\n                            value={this.state.searchTitle}/>\r\n                    </div>\r\n                    <div className={'col-3'}>\r\n                        <button className={`btn btn-success btn-block`}\r\n                                onClick={() => this.searchMovies(this.state.searchTitle)}>\r\n                            Search For Movie\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {this.state.movies !== null &&\r\n\r\n                <ul className={`list-group`}>\r\n                    {\r\n                        this.state.movies.map((movie, i) =>\r\n                            <li className={`list-group-item`} key={i}>\r\n                                <Link to={`/movie/${movie.imdbID}`}>\r\n                                    {movie.Title}\r\n                                    {/*{movie.imdbID}*/}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class MovieListComponent extends React.Component{\r\n\r\n    state={\r\n        movies:[],\r\n        user: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        movies: currentUser.movieList\r\n                    })\r\n                }\r\n            })\r\n        // fetch(`http://localhost:8080/api/users/${this.state.user.id}/films`)\r\n        //     .then(response => response.json())\r\n        //     .then(moviesList => {\r\n        //         this.setState({\r\n        //             movies: moviesList\r\n        //         }\r\n        //         )\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2> {this.state.user.username} Favorite Movies</h2>\r\n                <br/>\r\n                {console.log(this.props.movieList)}\r\n                <ul className=\"list-group\">\r\n                    {/*<li className=\"list-group-item\">*/}\r\n                    {/*    <label>Movie 1</label>*/}\r\n                    {/*        <button className=\"btn float-right btn-sm white-icon  \"*/}\r\n                    {/*        // onClick={() => {*/}\r\n                    {/*        // this.deleteMovie(movie.id);}}*/}\r\n                    {/*        >*/}\r\n                    {/*            X*/}\r\n                    {/*        </button>*/}\r\n\r\n                    {/*</li>*/}\r\n                    {this.props.user.movieList.map(movie =>\r\n                            <li className=\"list-group-item\">\r\n                                <Link to={`/movie/${movie.imdb}`}>\r\n                                    {movie.name}</Link>\r\n                            </li>\r\n                        )\r\n\r\n\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport ClubMemberListComponent from \"../club-page/ClubMemberListComponent\";\r\nimport HomeAboutComponent from \"./HomeAboutComponent\";\r\nimport ClubListComponent from \"./ClubListComponent\";\r\nimport ClubTabsComponent from \"./ClubTabsComponent\";\r\nimport ClubTaskListComponent from \"./ClubTaskListComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ClubListContainer from \"../../containers/ClubListContainer\";\r\nimport MovieSearchComponent from \"../../search/MovieSearchComponent\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\nimport MovieListComponent from \"./MovieListComponent\";\r\n\r\nexport default class HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        userType: '',  //'' member, president\r\n        user: {},\r\n        username: '',\r\n        tab: this.props.match.params.tab  //introduction clublist clublpage movielist search\r\n    }\r\n\r\n    setTabs = (tab) => {\r\n        //console.log(this.props.match.params.tab)\r\n        this.props.history.push(`/home/${tab}`);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        userType: 'member'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n            this.setState({\r\n                tab: this.props.match.params.tab\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    //load search page under tabs\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.userType === '' &&\r\n\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                        <button className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarTogglerDemo03\"\r\n                                aria-controls=\"navbarTogglerDemo03\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"col-3\">\r\n\r\n                            <a className=\"navbar-brand\">\r\n                                Home</a>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"collapse navbar-collapse col-7\" id=\"navbarTogglerDemo03\">\r\n\r\n                            <ul className=\"navbar-nav mr-auto float-right\">\r\n                                <li className=\"nav-item active\">\r\n\r\n                                    {\r\n\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"introduction\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('introduction')}\r\n                                            >\r\n                                                Introduction\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"clublist\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('clublist')}\r\n                                            >\r\n                                                Club List\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-1 float-right\">\r\n                            <Link to={'/login'}>\r\n                                <button className=\"float-left btn btn-sm btn-secondary\">\r\n                                    Login\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-1 float-right\">\r\n                            <Link to={'/register'}>\r\n                                <button className=\"float-right btn btn-sm btn-secondary\">\r\n                                    Register\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                }\r\n\r\n                {(this.state.userType === 'member' || this.state.userType === 'president') &&\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                        <button className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarTogglerDemo03\"\r\n                                aria-controls=\"navbarTogglerDemo03\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"col-3\">\r\n\r\n                            <a className=\"navbar-brand\">\r\n                                {this.state.user.username} Home </a>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                            <ul className=\"navbar-nav mr-auto float-right\">\r\n                                {/*<li className=\"nav-item active\">*/}\r\n                                {/*    {*/}\r\n                                {/*        <div>*/}\r\n                                {/*            <a*/}\r\n                                {/*                className={this.state.tab === \"tasks\" ? 'nav-link active' : 'nav-link mouse-pointer'}*/}\r\n                                {/*                onClick={() =>*/}\r\n                                {/*                    this.setTabs('tasks')}*/}\r\n                                {/*            >*/}\r\n                                {/*                Tasks*/}\r\n                                {/*            </a>*/}\r\n\r\n                                {/*        </div>*/}\r\n                                {/*    }*/}\r\n                                {/*</li>*/}\r\n\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"clubpage\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('clubpage')}\r\n                                            >\r\n                                                Club Page\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li className=\"nav-item active\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"movielist\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('movielist')}\r\n                                            >\r\n                                                Movie List\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"search\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('search')}\r\n                                                href={'/search'}\r\n                                            >\r\n                                                Search Movie\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n                        {this.state.userType === 'member' &&\r\n                        <div className=\"col-1 float-right\">\r\n\r\n                            <Link to='/profile'>\r\n                                <button className=\"float-right btn btn-lg btn-secondary\">\r\n                                    <i className=\"fa fa-user white-icon\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                        }\r\n\r\n                    </nav>\r\n\r\n\r\n                </div>\r\n                }\r\n\r\n                {this.state.tab === 'introduction' &&\r\n                <div>\r\n                    <HomeAboutComponent/>\r\n                </div>}\r\n\r\n                {(this.state.tab === 'clublist' || this.state.tab === 'clubpage') &&\r\n                <div>\r\n                    {/*<ClubListComponent/>*/}\r\n                    {/*<ClubListContainer {...match}/>*/}\r\n                    <ClubListContainer\r\n                        user={this.state.user}/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'movielist' &&\r\n                <div>\r\n                    <MovieListComponent\r\n                        user={this.state.user}\r\n                    movies={this.state.user.movieList}/>\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {updateUser} from \"../../services/UserServer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            gender: '',\r\n            phone: '',\r\n            movieList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .catch(e => {\r\n                //todo: go to home page\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .then(user => {\r\n                    this.setState({\r\n                        user: user\r\n                        // username: user.username,\r\n                        // password: user.password,\r\n                        // email: user.email,\r\n                        // phone: user.phone,\r\n                        // gender: user.gender\r\n                    })\r\n            })\r\n    }\r\n\r\n    update = () => {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n            body: JSON.stringify(this.state.user),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => this.setState({\r\n                username: user.username,\r\n                password: user.password,\r\n                email: user.email,\r\n                phone: user.phone,\r\n                gender: user.gender\r\n                //todo: set successful state like register do\r\n            }))\r\n\r\n    }\r\n\r\n    deleteMovie = (mid) =>{\r\n        //this.props.history.push(`/profile`)\r\n        fetch(`http://localhost:8080/api/films/${mid}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(response => response.json())\r\n\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(\"http://localhost:8080/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                        {console.log(this.state.user)}\r\n                        <h1>Profile {this.state.user.username}</h1>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <Link to={'/home/clubpage'}>\r\n                            <button className=\"btn btn-primary float-right add-margin3\">\r\n                                Home\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={this.logout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        <br/>\r\n        <div className=\"alert alert-success wbdv-message\" role=\"alert\">\r\n            Profile successfully saved\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-8\">\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               readOnly\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"someone\"\r\n                               defaultValue={this.state.user.username}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {\r\n                               //         username: e.target.value\r\n                               //     }\r\n                               // })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"******\"\r\n                               defaultValue={this.state.user.password}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {password: e.target.value}\r\n                               // })}\r\n                               onChange={(e) => {\r\n                                   const newPassword = e.target.value\r\n                                   this.setState(prevState => ({\r\n                                       user: {\r\n                                           ...prevState.user,\r\n                                           password: newPassword\r\n                                       }\r\n                                   }));\r\n                               }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"gender\">Gender</label>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <div className=\"col-sm-4 custom-control custom-radio add-margin10\">\r\n                            <input type=\"radio\"\r\n                                   className=\"custom-control-input\"\r\n                                   id=\"male\"\r\n                                   name=\"gender\"\r\n                                   checked={this.state.user.gender === 'male'}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {password: e.target.value}\r\n                                   // })}\r\n                                   onChange={(e) => {\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               gender: 'male'\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                                   defaultValue={'male'}\r\n                            />\r\n                            <label htmlFor=\"male\" className=\"custom-control-label\">Male</label>\r\n                        </div>\r\n                        <div className=\"custom-control float-right col-sm-5 custom-radio\">\r\n                            <input type=\"radio\"\r\n                                   className=\"custom-control-input\"\r\n                                   id=\"female\"\r\n                                   name=\"gender\"\r\n                                   checked={this.state.user.gender === 'female'}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {password: e.target.value}\r\n                                   // })}\r\n                                   onChange={(e) => {\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               gender: 'female'\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                                   defaultValue={'female'}/>\r\n                            <label htmlFor=\"female\" className=\"custom-control-label\">Female</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {  this.state.user.username &&\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"phone\"\r\n                               className=\"col-sm-2 col-form-label\">Phone</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\"\r\n                                   className=\"form-control wbdv-field wbdv-phone\"\r\n                                   id=\"phone\"\r\n                                   placeholder=\"(xxx)-xxx-xxxx\"\r\n                                   defaultValue={this.state.user.phone}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {\r\n                                   //         phone: e.target.value\r\n                                   //     }})}\r\n                                   onChange={(e) => {\r\n                                       const newPhone = e.target.value\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               phone: newPhone\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\"\r\n                           className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-email\"\r\n                               id=\"email\"\r\n                               placeholder=\"example@gmail.com\"\r\n                               defaultValue={this.state.user.email}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {\r\n                               //         email: e.target.value\r\n                               //     }})}\r\n                               onChange={(e) => {\r\n                                   const newEmail = e.target.value\r\n                                   this.setState(prevState => ({\r\n                                       user: {\r\n                                           ...prevState.user,\r\n                                           email: newEmail\r\n                                       }\r\n                                   }));\r\n                               }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-4\">\r\n                {/*<ul className=\"list-group wbdv-Club-list d-none d-lg-block\">*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <label>Club 1</label>*/}\r\n                {/*        <button className=\"btn float-right btn-sm white-icon  \">*/}\r\n                {/*            X*/}\r\n                {/*        </button>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <label>Club 2</label>*/}\r\n                {/*        <button className=\"btn float-right btn-sm grey-icon\">*/}\r\n                {/*            X*/}\r\n                {/*        </button>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <div className=\"input-group input-group-sm\">*/}\r\n                {/*            <input type=\"text\"*/}\r\n                {/*                   className=\"form-control\"*/}\r\n                {/*                   placeholder=\"Add New Club\"/>*/}\r\n                {/*            <button className=\"btn float-right btn-sm grey-icon\">*/}\r\n                {/*                <i className=\"fa fa-plus -add-btn\"*/}\r\n                {/*                   aria-hidden=\"true\"></i>*/}\r\n                {/*            </button>*/}\r\n\r\n                {/*        </div>*/}\r\n\r\n                {/*    </li>*/}\r\n                {/*</ul>*/}\r\n\r\n                {/*<br/>*/}\r\n                <h2>Favorite Movies</h2>\r\n                {console.log(this.state.user.movieList)}\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        this.state.user.movieList.map(movie =>\r\n                        <li className=\"list-group-item\">\r\n                            <Link to={`/movie/${movie.imdb}`}>\r\n                                {movie.name}\r\n                            </Link>\r\n                        {/*    <button className=\"btn float-right btn-sm white-icon  \"*/}\r\n                        {/*    onClick={() => {*/}\r\n                        {/*    this.deleteMovie(movie.id);*/}\r\n                        {/*}}>*/}\r\n                        {/*        X*/}\r\n                        {/*    </button>*/}\r\n                        </li>\r\n                        )\r\n                    }\r\n                    <li className=\"list-group-item\">\r\n                            <Link to={'search'}>\r\n                            <button className=\"btn btn-primary float-right btn-sm \">\r\n                                Search and add New Movie\r\n                            </button>\r\n                            </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label\"></label>\r\n            <div className=\"col-sm-10 \">\r\n                <button className=\"btn btn-success form-control\"\r\n                       //onClick={this.update()}\r\n                >\r\n                    Update\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label\"></label>\r\n            <div className=\"col-sm-10\">\r\n                <button className=\"btn btn-danger form-control\">\r\n                    Delete User\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    );\r\n    }\r\n\r\n    }\r\n\r\n\r\n","import React from \"react\";\r\nimport {fetchProfile} from \"../services/UserServer\";\r\n\r\nexport default class MovieDetailsComponent extends React.Component {\r\n\r\n    // http://www.omdbapi.com/?i=tt3896198&apikey=68d96315\r\n    state = {\r\n        movie: {},\r\n        liked: false,\r\n        user: {},\r\n        username: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const imdbID = this.props.match.params.imdbID\r\n        fetch(`http://www.omdbapi.com/?i=${imdbID}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(movie => {\r\n                console.log(typeof movie.Actors)\r\n                this.setState({\r\n                    movie: movie\r\n                })\r\n            })\r\n\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({user: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    addMovie = (userid, newMovie) => {\r\n        this.props.history.push(`/search/${newMovie.name}`)\r\n            fetch(`http://localhost:8080/api/users/${userid}/films`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(newMovie),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n    }\r\n\r\n    // searchMovies = (title) => {\r\n    //     this.props.history.push(`/search/${title}`)\r\n    //     fetch(`http://www.omdbapi.com/?s=${title}&apikey=68d96315`)\r\n    //         .then(response => response.json())\r\n    //         .then(results => {\r\n    //                 this.setState({\r\n    //                     movies: results.Search\r\n    //                 })\r\n    //                 if (results !== null) {\r\n    //                     this.setState({\r\n    //                         error: 'Unable to find movie'\r\n    //                     })\r\n    //                 }\r\n    //             }\r\n    //         )\r\n    //\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n               <button\r\n               onClick={() => {\r\n                   this.addMovie(\r\n                       this.state.user.id,\r\n                       {\r\n                           name: this.state.movie.Title\r\n                       })\r\n               }}>\r\n                   Add to Favorite Movie List\r\n               </button>\r\n                <h2>\r\n                    Movie Details {this.props.match.params.imdbID} {this.state.user.username}\r\n                </h2>\r\n                <h3>{this.state.movie.Title}</h3>\r\n                <p>Directed by: {this.state.movie.Director}</p>\r\n                <p>{this.state.movie.Plot}</p>\r\n                <h4>Cast</h4>\r\n                {this.state.movie.Actors}\r\n                <ul>\r\n                    {\r\n                        this.state.movie.Actors && this.state.movie.Actors.split(',').map((actor, index) =>\r\n                            <li key={index}>{actor}</li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <img src={this.state.movie.Poster}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport OriginHomeComponent from \"./OriginHomeComponent\";\r\nimport ClubListComponent from \"./home/ClubListComponent\";\r\nimport ClubPageComponent from \"./club-page/ClubPageComponent\";\r\nimport ClubLoginComponent from \"./login/ClubLoginComponent\";\r\nimport RegisterComponent from \"./register/RegisterComponent\";\r\nimport ClubMemberListComponent from \"./club-page/ClubMemberListComponent\";\r\nimport LeaderWorksiteComponent from \"./worksite/LeaderWorksiteComponent\";\r\nimport DesignCLubHomePageComponent from \"./ClubPageSetting/DesignCLubHomePageComponent\";\r\nimport HomeComponent from \"./home/HomeComponent\";\r\nimport ProfileComponent from \"./profile/ProfileComponent\";\r\nimport MovieDetailsComponent from \"../search/MovieDetailsComponent\";\r\nimport MovieSearchComponent from \"../search/MovieSearchComponent\";\r\n\r\n\r\nclass WhiteBoard extends React.Component {\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div className=\"container-fluid\">\r\n\r\n                    <Route\r\n                        path='/'\r\n                        exact={true}\r\n                        component={OriginHomeComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path='/home/:tab'\r\n                        exact={true}\r\n                        component={HomeComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path='/login'\r\n                        exact={true}\r\n                        component={ClubLoginComponent}/>\r\n\r\n                    <Route\r\n                        path='/register'\r\n                        exact={true}\r\n                        component={RegisterComponent}/>\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/club-list'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={ClubListComponent}/>*/}\r\n\r\n                    <Route\r\n                        path={['/club-page/:tab', '/club-page/:clubId/:tab']}\r\n                        exact={true}\r\n                        component={ClubPageComponent}/>\r\n\r\n                    <Route\r\n                        path={['/profile', '/profile/:userId']}\r\n                        exact={true}\r\n                        component={ProfileComponent}/>\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/member-list'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={ClubMemberListComponent}/>*/}\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/leader-worksite'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={LeaderWorksiteComponent}/>*/}\r\n\r\n                    <Route\r\n                        path='/:tabs/setting'\r\n                        exact={true}\r\n                        component={DesignCLubHomePageComponent}/>\r\n\r\n\r\n\r\n                    <Route\r\n                        path={`/search`}\r\n                        exact={true}\r\n                        component={MovieSearchComponent}/>\r\n\r\n                    <Route\r\n                        path={`/search/:searchTitle`}\r\n                        exact={true}\r\n                        component={MovieSearchComponent}/>\r\n\r\n                    <Route\r\n                        path={`/movie/:imdbID`}\r\n                        exact={true}\r\n                        component={MovieDetailsComponent}/>\r\n\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhiteBoard\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport WhiteBoard from \"./components/WhiteBoard\";\n\nfunction App() {\n  return (\n      <WhiteBoard/>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    newEventTitle: 'New Event',\r\n    events: []\r\n}\r\n\r\nconst EventReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FIND_EVENTS_FOR_CLUB\":\r\n            console.log(action.actualEvents)\r\n            return {\r\n                ...state,\r\n                events: action.actualEvents\r\n            }\r\n        case \"CREATE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.newEvent]\r\n            }\r\n        case \"DELETE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.eventId)\r\n            }\r\n        case \"UPDATE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => event.id === action.updatedEvent.id ?\r\n                        action.updatedEvent : event )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default EventReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport ClubReducer from \"./reducer/ClubReducer\";\nimport EventReducer from \"./reducer/EventReducer\";\nimport {Provider, connect} from \"react-redux\"\n\n\n\nconst reducers = combineReducers({\n    ClubReducer, EventReducer\n})\nconst store = createStore(reducers)\n// const store = createStore(ClubReducer)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n"],"sourceRoot":""}