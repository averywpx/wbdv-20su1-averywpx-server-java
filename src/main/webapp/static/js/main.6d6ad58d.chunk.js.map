{"version":3,"sources":["services/UserServer.js","components/home/ClubRowComponent.js","services/ClubService.js","components/home/ClubListComponent.js","components/home/HomeAboutComponent.js","components/club-page/ClubEventListComponent.js","components/club-page/ClubMemberListComponent.js","components/club-page/ClubSongListComponent.js","components/club-page/ClubAboutComponent.js","components/club-page/CLubContactComponent.js","services/EventService.js","containers/EventListContainer.js","components/club-page/ClubPageComponent.js","components/login/ClubLoginComponent.js","components/register/RegisterComponent.js","components/ClubPageSetting/DesignAboutComponent.js","components/worksite/LeaderWorksiteComponent.js","components/ClubPageSetting/DesignContactComponent.js","components/ClubPageSetting/DesignCLubHomePageComponent.js","components/home/ClubTabsComponent.js","components/home/ClubTaskListComponent.js","reducer/ClubReducer.js","containers/ClubListContainer.js","search/MovieSearchComponent.js","components/home/MovieListComponent.js","components/home/HomeComponent.js","components/profile/ProfileComponent.js","search/MovieDetailsComponent.js","components/WhiteBoard.js","App.js","serviceWorker.js","reducer/EventReducer.js","index.js"],"names":["fetchProfile","fetch","method","credentials","then","response","json","ClubRowComponent","state","editing","club","props","isPresident","user","username","updateClubName","newName","setState","prevState","name","updateClubCategory","newCategory","category","updateClubPresident","newPresident","president","catch","e","currentUser","this","to","id","className","onChange","event","target","value","defaultValue","onClick","updateClub","aria-hidden","deleteClub","React","Component","createClub","newClub","body","JSON","stringify","headers","findAllClubs","cid","ClubListComponent","clubs","newClubName","newClubCategory","newClubPresident","console","log","map","key","placeholder","HomeAboutComponent","ClubEventListComponent","newEventName","editingEvent","updateEventName","updateEventTime","newTime","time","updateEventLocation","newLocation","location","updateEventContent","newContent","Content","match","params","clubId","findEventsForClub","events","content","htmlFor","type","updateEvent","deleteEvent","newEventTime","newEventLocation","newEventContent","createEvent","ClubMemberListComponent","members","userList","users","ClubSongListComponent","ClubAboutComponent","CLubContactComponent","createAEvent","newEvent","eid","eventId","EventListContainer","connect","ownProps","EventReducer","newEventTitle","dispatch","actualEvents","actualEvent","status","newEventData","updatedEvent","ClubPageComponent","tab","setTabs","history","push","logout","userType","prevProps","snapshot","data-toggle","data-target","aria-controls","aria-expanded","aria-label","ClubLoginComponent","password","login","title","href","RegisterComponent","verifiedPassword","phone","gender","email","movieList","error","register","DesignAboutComponent","DesignContactComponent","flag","initialState","newClubTitle","ClubReducer","action","actualClubs","filter","updatedClub","ClubListContainer","actualClub","newClubData","MovieSearchComponent","movies","searchTitle","searchMovies","results","Search","movie","i","imdbID","Title","MovieListComponent","imdb","HomeComponent","ProfileComponent","update","deleteMovie","mid","role","readOnly","newPassword","checked","newPhone","newEmail","MovieDetailsComponent","liked","addMovie","userid","newMovie","Actors","Director","Plot","split","actor","index","src","Poster","WhiteBoard","path","exact","component","App","Boolean","window","hostname","reducers","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6d6ad58d.chunk.js","sourcesContent":["export const updateUser = (userId, user) =>\r\n    fetch(`http://localhost:8080/api/users/${userId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n    },\r\n        credentials: \"include\"\r\n})\r\n        .then(response => response.json())\r\n\r\nexport const fetchProfile = () =>\r\n    fetch(\"http://localhost:8080/api/profile\", {\r\n        method: 'POST',\r\n        credentials: \"include\"\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\n\r\nexport default class ClubRowComponent extends React.Component {\r\n\r\n    state = {\r\n        editing: false,\r\n        club: this.props.club,\r\n        isPresident: false,\r\n        user: {},\r\n        username: ''\r\n        // newClubTitle: 'New Club',\r\n        // editingClub: {}\r\n    }\r\n\r\n    updateClubName = (newName) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                name: newName\r\n            }\r\n        }))\r\n\r\n    updateClubCategory = (newCategory) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                category: newCategory\r\n            }\r\n        }))\r\n\r\n    updateClubPresident = (newPresident) =>\r\n        this.setState(prevState => ({\r\n            club: {\r\n                ...prevState.club,\r\n                president: newPresident\r\n            }\r\n        }))\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        username: currentUser.username,\r\n                        isPresident: this.props.club.president === currentUser.username\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n// {console.log(this.props.user.username === this.props.club.president)}\r\n\r\n    render() {\r\n        return (\r\n\r\n            <tr>\r\n                {/*{console.log(this.state.username)}*/}\r\n                {/*{console.log(this.state.isPresident)}*/}\r\n                <td>\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                            {this.state.club.name}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateClubName(event.target.value)}\r\n                            defaultValue={this.state.club.name}/>\r\n                    }\r\n                </td>\r\n                <td className=\"d-none d-lg-block\">\r\n                    {\r\n                        !this.state.editing &&\r\n                        <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                            {this.state.club.category}\r\n                        </Link>\r\n                    }\r\n                    {\r\n                        this.state.editing &&\r\n                        <input\r\n                            className=\"form-control\"\r\n                            onChange={(event) => this.updateClubCategory(event.target.value)}\r\n                            defaultValue={this.state.club.category}/>\r\n                    }\r\n\r\n                </td>\r\n                <td>\r\n                    {/*<a*/}\r\n                    {/*href=\"../club-page/club-page.template.client.html\">*/}\r\n                    {/*    defaultValue={this.state.club.president}*/}\r\n\r\n                        {\r\n                            !this.state.editing &&\r\n                            <Link to={`/club-page/${this.state.club.id}/events`}>\r\n                                {this.props.club.president}\r\n                            </Link>\r\n                        }\r\n                        {\r\n                            this.state.editing &&\r\n                            <input\r\n                                className=\"form-control\"\r\n                                onChange={(event) => this.updateClubPresident(event.target.value)}\r\n                                defaultValue={this.props.club.president}/>\r\n                        }\r\n                {/*</a>*/}\r\n\r\n                {/*    {*/}\r\n                {/*        !this.state.editing &&*/}\r\n                {/*        <Link to={`/club-page/${this.state.club.id}/events`}>*/}\r\n                {/*            {this.state.club.president}*/}\r\n                {/*        </Link>*/}\r\n                {/*    }*/}\r\n                {/*    {*/}\r\n                {/*        this.state.editing &&*/}\r\n                {/*        <input*/}\r\n                {/*            className=\"form-control\"*/}\r\n\r\n                {/*            value={this.state.club.president}/>*/}\r\n                {/*    }*/}\r\n                </td>\r\n                <td>\r\n                    {\r\n                        !this.state.editing && this.state.isPresident &&\r\n                        // (this.props.user.username === this.props.club.president) &&\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => this.setState({editing: true})}>\r\n                            Edit\r\n                        </button>\r\n                    }\r\n                    {this.state.editing &&\r\n                    <div className={`nav-link active`}>\r\n\r\n                        <button className=\"btn btn-success add-margin3\"\r\n                                onClick={() => {\r\n                                    this.props.updateClub(this.state.club.id, this.state.club)\r\n                                    this.setState({editing: false})\r\n                                }}>\r\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger\"\r\n                                onClick={() => this.props.deleteClub(this.state.club.id)}\r\n                        >\r\n                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n                    }\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// in onClick: this.props.updateClub(this.state.editingClub._id, this.state.editingClub)\r\n// onClick={() => this.props.deleteClub(Club._id)}\r\n// update name: onChange={(event) => this.updateCourseTitle(event.target.value)}","export const createClub = (newClub) =>\r\n    fetch(`http://localhost:8080/api/clubs`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newClub),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const findAllClubs = () =>\r\n    fetch(`http://localhost:8080/api/clubs`)\r\n        .then(response => response.json())\r\n\r\nexport const deleteClub = (cid) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\n\r\nexport const updateClub = (cid, newClub) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newClub),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    createClub,\r\n    findAllClubs,\r\n    deleteClub,\r\n    updateClub\r\n}","import React from \"react\";\r\nimport '../css/ClubListComponent.css'\r\nimport ClubRowComponent from \"./ClubRowComponent\";\r\nimport ClubService from \"../../services/ClubService\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport default class ClubListComponent extends React.Component {\r\n    state = {\r\n        clubs: [],\r\n        newClubName: '',\r\n        newClubCategory: '',\r\n        newClubPresident: '',\r\n        user: this.props.user,\r\n        username: this.props.user.username\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        console.log(this.state)\r\n        this.props.findAllClubs()\r\n        console.log(this.props)\r\n    }\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps)\r\n    //     console.log(this.props)\r\n    //     console.log(prevProps.params !== this.props.params)\r\n    //     if (prevProps.params !== this.props.params) {\r\n    //         this.props.findAllClubs()\r\n    //     }\r\n    // }\r\n\r\n\r\n    // componentDidMount() {\r\n    //     ClubService.findAllClubs()\r\n    //         .then(actualArrayOfClubs =>\r\n    //             this.setState({\r\n    //                 clubs: actualArrayOfClubs\r\n    //             }))\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {console.log(this.props.user.username)}\r\n                <table className=\"table table-striped \">\r\n\r\n                    <thead>\r\n                    <tr className=\"table-dark\">\r\n                        <th>Club Name</th>\r\n                        <th className=\"d-none d-lg-block\">Category</th>\r\n                        <th>President</th>\r\n                        <th><i className=\"fa fa-pencil\" aria-hidden=\"true\"></i></th>\r\n                    </tr>\r\n                    </thead>\r\n\r\n\r\n                    <tbody>\r\n\r\n                    {\r\n                        !this.props.user.username &&\r\n                        this.props.clubs.map(club =>\r\n                            <ClubRowComponent\r\n                                // deleteclub={this.props.deleteclub}\r\n                                key={club.id}\r\n                                club={club}\r\n\r\n                                deleteClub={this.props.deleteClub}\r\n                                updateClub={this.props.updateClub}/>\r\n                        )}\r\n                    {//when user exist\r\n                        this.props.user.username &&\r\n                        this.props.user.clubs.map(club =>\r\n                            <ClubRowComponent\r\n                                // deleteclub={this.props.deleteclub}\r\n                                key={club.id}\r\n                                club={club}\r\n                                user={this.state.user}\r\n                                deleteClub={this.props.deleteClub}\r\n                                updateClub={this.props.updateClub}/>\r\n                        )}\r\n                    {}\r\n                    <tr>\r\n                        <td>\r\n                            <input\r\n                                onChange={(event) => this.setState({\r\n                                    newClubName: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubName}\r\n                                placeholder=\"New Name\"/>\r\n                        </td>\r\n                        <td className=\"d-none d-lg-block\">\r\n                            <input\r\n                                onChange={(event) => this.setState({\r\n                                    newClubCategory: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubCategory}\r\n                                placeholder=\"New Category\"/>\r\n                        </td>\r\n                        <td>\r\n                            <input\r\n                                className=\"add-margin3\"\r\n                                onChange={(event) => this.setState({\r\n                                    newClubPresident: event.target.value\r\n                                })}\r\n                                className=\"form-control font-italic\"\r\n                                value={this.state.newClubPresident}\r\n                                placeholder=\"New Category\"/>\r\n                        </td>\r\n                        <td>\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={() => {\r\n                                        this.props.createClub(\r\n                                            {\r\n                                                name: this.state.newClubName,\r\n                                                category: this.state.newClubCategory,\r\n                                                president: this.state.newClubPresident,\r\n\r\n                                            });\r\n                                        this.props.findAllClubs();\r\n                                    }\r\n                                    }>\r\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </td>\r\n\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default class HomeAboutComponent extends React.Component{\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <span>Intro to app</span>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ClubEventListComponent extends React.Component {\r\n    state = {\r\n        // event: this.props.event,\r\n        newEventName: 'New Event',\r\n        // newEventTime: '',\r\n        // newEventLocation: '',\r\n        // newEventContent: '',\r\n        editingEvent: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.clubId)\r\n        console.log(this.state)\r\n        this.props.findEventsForClub(this.props.match.params.clubId)\r\n        console.log(this.props)\r\n    }\r\n\r\n    updateEventName = (newName) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                name: newName\r\n            }\r\n        }))\r\n\r\n    updateEventTime = (newTime) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                time: newTime\r\n            }\r\n        }))\r\n\r\n    updateEventLocation = (newLocation) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                location: newLocation\r\n            }\r\n        }))\r\n\r\n    updateEventContent = (newContent) =>\r\n        this.setState(prevState => ({\r\n            event: {\r\n                ...prevState.event,\r\n                Content: newContent\r\n            }\r\n        }))\r\n\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps)\r\n    //     console.log(this.props)\r\n    //     console.log(prevProps.clubId !== this.props.clubId)\r\n    //     //todo: may cause update issue\r\n    //     // if (prevProps.match.params !== this.props.match.params) {\r\n    //     if (false) {\r\n    //         this.props.findEventsForClub(this.props.match.params.clubId)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <h2>Events</h2>\r\n                <br/>\r\n                <ul className=\"list-group\">\r\n                    {/*<li className=\"list-group-item\">*/}\r\n                    {/*    <h4>Event 1</h4>*/}\r\n                    {/*<p>am</p>*/}\r\n                    {/*<p>1111</p>*/}\r\n                    {/*<p>test</p>*/}\r\n                    {/*</li>*/}\r\n\r\n                    {\r\n                        //use input date for where\r\n                        this.props.events.map(event =>\r\n                            <li className=\"list-group-item\"\r\n                                key={event.id}>\r\n                                <div>\r\n                                    {\r\n                                        this.state.editingEvent.id !== event.id &&\r\n                                        <div>\r\n                                            <h4>{event.name}</h4>\r\n                                            <p>When: {event.time}</p>\r\n                                            <p>Location: {event.location}</p>\r\n                                            <p>{event.content}</p>\r\n                                            {this.props.user.username == this.props.club.president &&\r\n                                            <button\r\n                                                className=\"btn btn-primary\"\r\n                                                onClick={() => this.setState({editingEvent: event})}>\r\n                                                Edit\r\n                                            </button>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    {this.state.editingEvent.id === event.id &&\r\n                                    <div>\r\n                                        {console.log(this.state.editingEvent.id)}\r\n                                        {console.log(event.id)}\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventName\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Event:\r\n                                            </label>\r\n                                            <input\r\n                                                onChange={(e) => {\r\n                                                    const newName = e.target.value\r\n                                                    this.setState(prevState => ({\r\n                                                        editingEvent: {\r\n                                                            ...prevState.editingEvent,\r\n                                                            name: newName\r\n                                                        }\r\n                                                    }));\r\n                                                    this.updateEventName(e.target.value)\r\n                                                }}\r\n                                                className=\"form-control font-italic\"\r\n                                                defaultValue={this.state.editingEvent.name}\r\n                                                id=\"eventName\"\r\n                                                type={'text'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventTime\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                When:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newTime = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        time: newTime\r\n                                                    }\r\n                                                }));\r\n                                                this.updateEventTime(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.time}\r\n                                                   id=\"eventTime\"\r\n                                                   type={'date'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventLocation\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Location:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newLocation = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        location: newLocation\r\n                                                    }\r\n                                                }));\r\n                                                    this.updateEventLocation(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.location}\r\n                                                   id=\"eventLocation\"\r\n                                                   type={'text'}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group row\">\r\n                                            <label htmlFor=\"eventContent\"\r\n                                                   className=\"col-sm-2 col-form-label\">\r\n                                                Content:\r\n                                            </label>\r\n                                            <input onChange={(e) => {\r\n                                                const newContent = e.target.value\r\n                                                this.setState(prevState => ({\r\n                                                    editingEvent: {\r\n                                                        ...prevState.editingEvent,\r\n                                                        content: newContent\r\n                                                    }\r\n                                                }));\r\n                                                this.updateEventContent(e.target.value)\r\n                                            }}\r\n                                                   className=\"form-control font-italic\"\r\n                                                   defaultValue={this.state.editingEvent.content}\r\n                                                   id=\"eventContent\"\r\n                                                   type={'text'}\r\n                                            />\r\n                                        </div>\r\n\r\n\r\n                                        <button className=\"btn btn-success add-margin3\"\r\n                                                onClick={() => {\r\n                                                    this.props.updateEvent(this.state.editingEvent.id, this.state.editingEvent)\r\n                                                    this.setState({editingEvent: {}})\r\n                                                }}>\r\n                                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n\r\n                                        <button className=\"btn btn-danger\"\r\n                                                onClick={() => {\r\n                                                    this.props.deleteEvent(event.id);\r\n                                                    this.props.findEventsForClub(this.props.match.params.clubId);\r\n                                                    this.setState({editingEvent: {}});\r\n                                                }}\r\n                                        >\r\n                                            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                                        </button>\r\n\r\n\r\n                                    </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    }\r\n                    {this.props.user.username == this.props.club.president &&\r\n                    <li className=\"list-group-item\">\r\n                        <h4>New Event</h4>\r\n                        <div>\r\n                            <label htmlFor=\"eventName\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Event:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventName: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventName}\r\n                                   placeholder=\"New Name\"\r\n                                   id=\"eventName\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventTime\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                When:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventTime: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventTime}\r\n                                   id=\"eventTime\"\r\n                                   type={'date'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventLocation\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Location:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventLocation: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventLocation}\r\n                                   placeholder=\"New Address\"\r\n                                   id=\"eventLocation\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"eventContent\"\r\n                                   className=\"col-sm-2 col-form-label\">\r\n                                Content:\r\n                            </label>\r\n                            <input onChange={(event) => this.setState({\r\n                                newEventContent: event.target.value\r\n                            })}\r\n                                   className=\"form-control font-italic\"\r\n                                   defaultValue={this.state.newEventContent}\r\n                                   placeholder=\"New Content\"\r\n                                   id=\"eventContent\"\r\n                                   type={'text'}\r\n                            />\r\n                        </div>\r\n                        <br/>\r\n                        <div>\r\n                            <button className=\"btn btn-danger float-right\"\r\n                                    onClick={() => {\r\n                                        this.props.createEvent(\r\n                                            this.props.match.params.clubId,\r\n                                            {\r\n                                                name: this.state.newEventName,\r\n                                                time: this.state.newEventTime,\r\n                                                location: this.state.newEventLocation,\r\n                                                content: this.state.newEventContent\r\n                                            });\r\n                                        //this.props.findEventsForClub(this.props.match.params.clubId);\r\n                                        this.setState({editingEvent: {}});\r\n                                    }}>\r\n                                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                    }\r\n                </ul>\r\n\r\n\r\n                <br/>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n//update: onChange={(event) => this.updateClubName(event.target.value)}\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default class ClubMemberListComponent extends React.Component {\r\n\r\n    state = {\r\n        members: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`http://localhost:8080/api/users`)\r\n            .then(response => response.json())\r\n            .then(userList => {\r\n                if (userList) {\r\n                    this.setState({\r\n                        users: userList,\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"table table-striped \">\r\n                {console.log(this.state.users)}\r\n                <h2>Members</h2>\r\n                <ul className=\"list-group\">\r\n\r\n                    {this.state.users.map(user =>\r\n                        <li className=\"list-group-item\">\r\n                            <Link to={`/profile/${this.user.id}`}>{user.username}</Link>\r\n                        </li>\r\n                    )\r\n\r\n\r\n                    }\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class ClubSongListComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h3>Choose a song for meeting!</h3>\r\n                <br/>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Song 1</li>\r\n                    <li className=\"list-group-item\">Song 2</li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubAboutComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <span>Intro about club</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class CLubContactComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h5> Meeting time: </h5>\r\n                <h5> Location: </h5>\r\n                <h5> Email: </h5>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const findEventsForClub = (cid) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}/events`)\r\n        .then(response => response.json())\r\n\r\nexport const createAEvent = (cid, newEvent) =>\r\n    fetch(`http://localhost:8080/api/clubs/${cid}/events`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(newEvent),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const deleteEvent = (eid) =>\r\n    fetch(`http://localhost:8080/api/events/${eid}`, {\r\n        method: 'DELETE'\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport const updateEvent = (eventId, newEvent) =>\r\n    fetch(`http://localhost:8080/api/events/${eventId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(newEvent),\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n\r\nexport default {\r\n    findEventsForClub,\r\n    createAEvent,\r\n    deleteEvent,\r\n    updateEvent\r\n}","import {connect} from \"react-redux\";\r\nimport ClubEventListComponent from \"../components/club-page/ClubEventListComponent\";\r\nimport {findEventsForClub, createAEvent, deleteEvent, updateEvent} from \"../services/EventService\";\r\nimport {createClub} from \"../services/ClubService\";\r\n\r\n\r\nconst stateToPropertyMapper = (state, ownProps) => {\r\n   // console.log(this.params)\r\n    console.log(ownProps)\r\n    return {\r\n        events: state.EventReducer.events,\r\n        newEventTitle: state.EventReducer.newEventTitle,\r\n        params: ownProps.params\r\n        // ownProps: ownProps\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n    findEventsForClub: (clubId) => {\r\n        findEventsForClub(clubId)\r\n            .then(actualEvents => dispatch({\r\n                type: \"FIND_EVENTS_FOR_CLUB\",\r\n                actualEvents\r\n            }))\r\n    },\r\n    createEvent: (cid, newEvent) =>\r\n        createAEvent(cid, newEvent)\r\n            .then(actualEvent => dispatch({\r\n                type: 'CREATE_EVENT',\r\n                newEvent: actualEvent\r\n            })),\r\n    deleteEvent: (eventId) =>\r\n        deleteEvent(eventId)\r\n            .then(status => dispatch({\r\n                type: \"DELETE_EVENT\",\r\n                eventId: eventId\r\n            })),\r\n    updateEvent: (eventId, newEventData) => {\r\n        updateEvent(eventId, newEventData)\r\n            .then(status => dispatch({\r\n                type: 'UPDATE_EVENT',\r\n                updatedEvent: newEventData\r\n            }))\r\n    }\r\n})\r\n\r\nconst EventListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ClubEventListComponent)\r\n\r\nexport default EventListContainer","import React from \"react\";\r\nimport HomeAboutComponent from \"../home/HomeAboutComponent\";\r\nimport ClubEventListComponent from \"./ClubEventListComponent\";\r\nimport ClubMemberListComponent from \"./ClubMemberListComponent\";\r\nimport ClubSongListComponent from \"./ClubSongListComponent\";\r\nimport ClubAboutComponent from \"./ClubAboutComponent\";\r\nimport CLubContactComponent from \"./CLubContactComponent\";\r\nimport EventListContainer from \"../../containers/EventListContainer\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\n\r\n\r\nexport default class ClubPageComponent extends React.Component{\r\n\r\n    state = {\r\n        president: false,\r\n        tab: this.props.match.params.tab,  //events member-list song-list about contact\r\n        user: {},\r\n        username: '',\r\n        club:{}\r\n    }\r\n\r\n    setTabs = (tab) => {\r\n        //console.log(this.props.match.params.tab)\r\n        this.props.history.push(`/club-page/${tab}`);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match)\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        userType: 'member'\r\n                    })\r\n                }\r\n            })\r\n        fetch(`http://localhost:8080/api/clubs/${this.props.match.params.clubId}`)\r\n            .then(response => response.json())\r\n            .then(club => {\r\n                this.setState(\r\n                    {\r\n                        club: club\r\n                    }\r\n                )\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(this.state.club.users)\r\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n            this.setState({\r\n                tab: this.props.match.params.tab\r\n            })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(\"http://localhost:8080/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                {console.log(this.state.club.president)}\r\n\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            {this.state.club.name} ({this.state.user.username})</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"events\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('events')}\r\n                                        >\r\n                                            Events\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"member-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('member-list')}\r\n                                        >\r\n                                            Member List\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"song-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('song-list')}\r\n                                        >\r\n                                            Songs\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"about\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('about')}\r\n                                        >\r\n                                            About\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tab === \"contact\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('contact')}\r\n                                        >\r\n                                            Contact\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n                    {this.state.user.username &&\r\n                        <div className=\"col-1\">\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={this.logout}>\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </nav>\r\n\r\n\r\n                {this.state.tab === 'events' &&\r\n                <div>\r\n                    <EventListContainer\r\n                        match={this.props.match}\r\n                        history={this.props.history}\r\n                        user={this.state.user}\r\n                        club={this.state.club}\r\n                    />\r\n                </div>}\r\n\r\n                {this.state.tab === 'member-list' &&\r\n                <div>\r\n                    <ClubMemberListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'song-list' &&\r\n                <div>\r\n                    <ClubSongListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'about' &&\r\n                <div>\r\n                    <ClubAboutComponent/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'contact' &&\r\n                <div>\r\n                    <CLubContactComponent/>\r\n                </div>}\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ClubLoginComponent extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    login = () => {\r\n        fetch(\"http://localhost:8080/api/login\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        }).then(response => response.json())\r\n            .catch(e => {\r\n                this.props.history.push(\"/login\")\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser)\r\n                    //todo: go to home page\r\n                    this.props.history.push(\"/profile\")\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>Login</h1>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"Someone\"\r\n                               title=\"Use this username to login\"\r\n                               onChange={(e) => this.setState({username: e.target.value})}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({password: e.target.value})}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n                        <Link to={'./profile'}>\r\n                            <button className=\"btn btn-primary form-control\"\r\n                                    onClick={this.login}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col\">\r\n                        <a className=\"float-right\"\r\n                           href=\"./register\">\r\n                            Register\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport ClubService from \"../../services/ClubService\";\r\nimport ClubPageComponent from \"../club-page/ClubPageComponent\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class RegisterComponent extends React.Component {\r\n\r\n    //todo: if register as president, add new club. If register as member, check club name.\r\n\r\n    state = {\r\n        username: 'hi',\r\n        password: '',\r\n        verifiedPassword: '',\r\n        phone: '',\r\n        gender: '',\r\n        email: '',\r\n        movieList: [],\r\n        error: null\r\n    }\r\n\r\n\r\n    //todo: throw error when the username and password is empty\r\n    register = () => {\r\n        console.log(this.state.user)\r\n        fetch(\"http://localhost:8080/api/register\", {\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password,\r\n                phone: this.state.phone,\r\n                gender: this.state.gender,\r\n                email: this.state.email,\r\n                movieList: this.state.movieList\r\n\r\n            }),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n            .catch(e => {\r\n                this.setState({\r\n                    error: 'Unable to register'\r\n                })\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.props.history.push(\"/profile\")\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h1>Register</h1>\r\n\r\n                {\r\n                    this.state.error &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"Someone\"\r\n                               title=\"Use this username to login\"\r\n                               // onChange={(e) => {\r\n                               //     const newUsername = e.target.value\r\n                               //     this.setState(prevState => ({\r\n                               //         user: {\r\n                               //             // ...prevState.user,\r\n                               //             username: newUsername\r\n                               //         }\r\n                               //     }));\r\n                               // }}\r\n                               onChange={(e) => this.setState({username: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({password: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"clubName\"\r\n                           className=\"col-sm-2 col-form-label\">Club Name</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                            // onChange={(e) => {\r\n                            //     const newClubName = e.target.value\r\n                            //     this.setState(prevState => ({\r\n                            //         user: {\r\n                            //             ...prevState.user,\r\n                            //             password: newPassword\r\n                            //         }\r\n                            //     }));\r\n                            // }}\r\n                               value={this.state.newClubName}\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"clubName\"\r\n                               placeholder=\"Some Club\"\r\n                               title=\"club you want to join in\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*<div className=\"form-group row\">*/}\r\n                {/*    <label htmlFor=\"category\"*/}\r\n                {/*           className=\"col-sm-2 col-form-label\">Category</label>*/}\r\n                {/*    <div className=\"col-sm-10\">*/}\r\n                {/*        <input type=\"text\"*/}\r\n                {/*               className=\"form-control\"*/}\r\n                {/*               id=\"category\"*/}\r\n                {/*               placeholder=\"Club Type\"/>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n                {/*<div className=\"form-group row\">*/}\r\n                {/*    <label htmlFor=\"role\"*/}\r\n                {/*           className=\"col-sm-2 col-form-label\">Role</label>*/}\r\n                {/*    <div className=\"col-sm-10\">*/}\r\n                {/*        <select className=\"custom-select\"*/}\r\n                {/*                title=\"What's your role in a club?\">*/}\r\n                {/*            <option defaultValue=\"President\">President</option>*/}\r\n                {/*            <option value=\"Member\">Member</option>*/}\r\n                {/*        </select>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"verifyPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Verify Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control wbdv-field wbdv-password-verify\"\r\n                               id=\"verifyPassword\"\r\n                               placeholder=\"********\"\r\n                               onChange={(e) => this.setState({verifiedPassword: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Gender</label>\r\n                    <div className=\"col-sm-4 custom-control custom-radio\">\r\n                        <input type=\"checkbox\"\r\n                               className=\"custom-control-input\"\r\n                               id=\"male\"\r\n                               name=\"gender\"\r\n                               onChange={(e) => this.setState({gender: 'male'})}\r\n                        />\r\n                        <label htmlFor=\"male\" className=\"custom-control-label\">Male</label>\r\n                    </div>\r\n                    <div className=\"custom-control col-sm-5 custom-radio\">\r\n                        <input type=\"checkbox\"\r\n                               className=\"custom-control-input\"\r\n                               id=\"female\"\r\n                               name=\"gender\"\r\n                               onChange={(e) => this.setState({gender:'female'})}\r\n                        />\r\n                        <label htmlFor=\"female\" className=\"custom-control-label\">Female</label>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"phone\"\r\n                           className=\"col-sm-2 col-form-label\">Phone</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-phone\"\r\n                               id=\"phone\"\r\n                               placeholder=\"(xxx)-xxx-xxxx\"\r\n                               onChange={(e) => this.setState({phone: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\"\r\n                           className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-email\"\r\n                               id=\"email\"\r\n                               placeholder=\"example@gmail.com\"\r\n                               onChange={(e) => this.setState({email: e.target.value})}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col-sm-10\">\r\n\r\n                        <Link to={`/profile`}>\r\n                            <button className=\"btn btn-primary form-control\"\r\n\r\n                                    onClick={\r\n                                        //check if password are the same\r\n                                        this.register\r\n                                    }\r\n                            >\r\n                                Register\r\n                            </button>\r\n                        </Link>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-sm-2 col-form-label\"></label>\r\n                    <div className=\"col\">\r\n                        <a className=\"float-left wbdv-link wbdv-login\"\r\n                           href=\"./login\">\r\n                            Login\r\n                        </a>\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                        <Link className=\"float-right\"\r\n                              to=\"/home/introduction\">\r\n                            Cancel\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// onClick={\r\n// () => this.addName(this.state.newClubName)}","import React from \"react\";\r\n\r\nexport default class DesignAboutComponent extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Edit Club Introduction</h2>\r\n                <br/>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"fetch introduction from server\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n//setting: about, recourse, contact info, club calendar, member list\r\n\r\nexport default class LeaderWorksiteComponent extends React.Component{\r\n    state = {\r\n        tabs: this.props.match.params.tabs,\r\n    }\r\n\r\n    setTabs = (tabs, select) => {\r\n        this.props.history.push(`/${tabs}/leader-worksite`);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tabs !== this.props.match.params.tabs) {\r\n            this.setState({\r\n                tabs: this.props.match.params.tabs\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            Worksite</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">\r\n                                    Assign Tasks <span\r\n                                        className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Calendar </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Add Event</a>\r\n                            </li>\r\n\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"./member-list/setting\">Setting</a>\r\n                            </li>\r\n                            {/*<li className=\"nav-item active\">*/}\r\n                            {/*    <a className=\"nav-link\" href=\"#\">*/}\r\n                            {/*        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i></a>*/}\r\n                            {/*</li>*/}\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-1 float-right\">\r\n                        <button className=\"float-right btn btn-lg btn-secondary\">\r\n                            <i className=\"fa fa-user white-icon\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n                </nav>\r\n\r\n\r\n                <h2>Assign Tasks</h2>\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-2 col-lg-3 col-md-4 col-sm-6 col-12\">\r\n                    <div className=\"card \">\r\n                        <div className=\"card-header\">\r\n                            Member 1\r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\">Task 1</li>\r\n                            <li className=\"list-group-item\">Task 2</li>\r\n                            <li className=\"list-group-item\">Task 3</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <br/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nexport default class DesignContactComponent extends React.Component {\r\n    state = {\r\n        flag: true\r\n    }\r\n\r\n//email phone number, twitter, address\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n            {this.state.flag === true &&\r\n        <div className=\"contain-fluid\">\r\n            <div className=\"row\">\r\n                <label htmlFor=\"email\"> Email </label>\r\n                <input className=\"form-control\"\r\n                       type=\"email\"\r\n                       id=\"email\"\r\n                       placeholder=\"example@gmail.com\"/>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport ClubMemberListComponent from \"../club-page/ClubMemberListComponent\";\r\nimport DesignAboutComponent from \"./DesignAboutComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DesignContactComponent from \"./DesignContactComponent\";\r\nimport '../css/DesignClubHomPageComponent.css'\r\n\r\n\r\n//todo: use a container instead?\r\n\r\nexport default class DesignCLubHomePageComponent extends React.Component{\r\n    state = {\r\n        tabs: this.props.match.params.tabs,\r\n    }\r\n\r\n    setTabs = (tabs) => {\r\n        this.props.history.push(`/${tabs}/setting`);\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tabs !== this.props.match.params.tabs) {\r\n            this.setState({\r\n                tabs: this.props.match.params.tabs\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                    <button className=\"navbar-toggler\"\r\n                            type=\"button\"\r\n                            data-toggle=\"collapse\"\r\n                            data-target=\"#navbarTogglerDemo03\"\r\n                            aria-controls=\"navbarTogglerDemo03\"\r\n                            aria-expanded=\"false\"\r\n                            aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"col-3\">\r\n\r\n                        <a className=\"navbar-brand\">\r\n                            Club Setting</a>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                        <ul className=\"navbar-nav mr-auto float-right\">\r\n                            <li className=\"nav-item active\">\r\n                                {\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"member-list\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('member-list', true)}>\r\n                                            Member List\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n\r\n\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">CLub Calendar </a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"about\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('about',true)}>\r\n                                            About\r\n                                        </a>\r\n\r\n                                    </div>\r\n                                }\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Feature</a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {\r\n                                    <div>\r\n                                        <a\r\n                                            className={this.state.tabs === \"contact\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                            onClick={() =>\r\n                                                this.setTabs('contact')}>\r\n                                            Contact\r\n                                        </a>\r\n                                    </div>\r\n                                }\r\n\r\n                            </li>\r\n                        </ul>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-1 float-right\">\r\n                        <Link to={`/leader-worksite`}>Back to Worksite</Link>\r\n                    </div>\r\n\r\n\r\n                </nav>\r\n\r\n                {this.state.tabs === 'member-list' &&\r\n                <div>\r\n                    <ClubMemberListComponent/>\r\n                </div>}\r\n\r\n                {this.state.tabs === 'about' &&\r\n                <div>\r\n                    <DesignAboutComponent/>\r\n                </div>}\r\n\r\n                {this.state.tabs === 'contact' &&\r\n                <div>\r\n                    <DesignContactComponent/>\r\n                </div>}\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubTabsComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2 id=\"Clubs \">Clubs</h2>\r\n\r\n                <ul className=\"nav nav-tabs wbdv-Club-tabs\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" href=\"#\">Club 1</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Club 2</a>\r\n                    </li>\r\n                </ul>\r\n                <br/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\n\r\nexport default class ClubTaskListComponent extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"list-group\">\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">Task 1</h5>\r\n                        </div>\r\n                        <p className=\"mb-1\">Task 1 description</p>\r\n                    </a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n                        <div className=\"d-flex w-100 justify-content-between\">\r\n                            <h5 className=\"mb-1\">Task 2</h5>\r\n                        </div>\r\n                        <p className=\"mb-1\">Task 2 description</p>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","const initialState = {\r\n    newClubTitle: 'New Club',\r\n    clubs: [\r\n    ]\r\n}\r\n\r\nconst ClubReducer = (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case \"FIND_ALL_CLUBS\":\r\n            return {\r\n                ...state,\r\n                clubs: action.actualClubs\r\n            }\r\n\r\n\r\n        case \"CREATE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: [...state.clubs, action.newClub]\r\n            }\r\n\r\n        case \"DELETE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: state.clubs.filter(club => club.id !== action.clubId)\r\n            }\r\n\r\n        case \"UPDATE_CLUB\":\r\n            return {\r\n                ...state,\r\n                clubs: state.clubs.map(\r\n                    club => club.id === action.updatedClub.id ?\r\n                        action.updatedClub : club )\r\n            }\r\n\r\n        // case \"UPDATE_CLUB\":\r\n        //     return {\r\n        //         ...state,\r\n        //         clubs: state.clubs.map(\r\n        //             club => club._id === action.updatedclub._id ?\r\n        //                 action.updatedclub : club )\r\n        //     }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ClubReducer\r\n","import ClubReducer from \"../reducer/ClubReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {findAllClubs, createClub, deleteClub, updateClub} from \"../services/ClubService\";\r\nimport ClubListComponent from \"../components/home/ClubListComponent\";\r\n\r\nconst stateToPropertyMapper = (state) => {\r\n    //clubs: state.clubReducer.clubs\r\n    return {\r\n        // clubs: state.ClubReducer.clubs,\r\n        clubs: state.ClubReducer.clubs,\r\n        // clubs: state.ClubReducer.clubs,\r\n        newClubTitle: state.ClubReducer.newClubTitle,\r\n        //params: ownProps.params\r\n        // ownProps: ownProps\r\n    }\r\n}\r\n\r\nconst dispatchToPropertyMapper = (dispatch) => ({\r\n\r\n    findAllClubs: () => {\r\n        findAllClubs()\r\n            .then(actualClubs => dispatch({\r\n                type: \"FIND_ALL_CLUBS\",\r\n                actualClubs\r\n            }))\r\n    },\r\n\r\n    createClub: (newClub) =>\r\n        createClub(newClub)\r\n            .then(actualClub => dispatch({\r\n                type: 'CREATE_CLUB',\r\n                newClub: actualClub\r\n            })),\r\n\r\n    deleteClub: (clubId) =>\r\n        deleteClub(clubId)\r\n            .then(status => dispatch({\r\n                type: \"DELETE_CLUB\",\r\n                clubId: clubId\r\n            })),\r\n\r\n\r\n    updateClub: (clubId, newClubData) => {\r\n        updateClub(clubId, newClubData)\r\n            .then(status => dispatch({\r\n                type: 'UPDATE_club',\r\n                updatedClub: newClubData\r\n            }))\r\n    },\r\n\r\n\r\n\r\n\r\n})\r\n\r\nconst ClubListContainer = connect\r\n(stateToPropertyMapper, dispatchToPropertyMapper)\r\n(ClubListComponent)\r\n\r\nexport default ClubListContainer\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchProfile} from \"../services/UserServer\";\r\n\r\nexport default class MovieSearchComponent extends React.Component {\r\n\r\n    // http://www.omdbapi.com/?i=tt3896198&apikey=68d96315\r\n\r\n    state = {\r\n        movies: [\r\n            {title: \"Avatar\"},\r\n            {title: \"Aliens\"},\r\n            {title: \"Titanic\"},\r\n            {title: \"Terminator 2\"}\r\n        ],\r\n\r\n        searchTitle: '',\r\n        error: null,\r\n        user: {},\r\n        username: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        let searchTitle = this.props.match.params.searchTitle;\r\n        console.log(searchTitle)\r\n        if (!searchTitle)\r\n            searchTitle = 'Titanic'\r\n        fetch(`http://www.omdbapi.com/?s=${searchTitle}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                    this.setState({\r\n                        movies: results.Search,\r\n                        searchTitle: searchTitle\r\n                    })\r\n                    if (this.state.movies == null) {\r\n                        this.setState({\r\n                            error: 'Unable to find movie'\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({user: currentUser})\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    searchMovies = (title) => {\r\n        this.props.history.push(`/search/${title}`)\r\n        fetch(`http://www.omdbapi.com/?s=${title}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                    this.setState({\r\n                        movies: results.Search\r\n                    })\r\n                    if (results !== null) {\r\n                        this.setState({\r\n                            error: 'Unable to find movie'\r\n                        })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to={'/profile'}>\r\n                    <button className={'btn btn-primary'}>\r\n                        Profile\r\n                    </button>\r\n                </Link>\r\n                <br/>\r\n                <h2>Search Movies {this.state.user.username}</h2>\r\n                {console.log(this.state.movies)}\r\n                {console.log(this.state.error)}\r\n\r\n                {\r\n                    this.state.movies === null &&\r\n                    <div className=\"alert alert-danger\">\r\n                        {this.state.error}\r\n                    </div>\r\n                }\r\n\r\n\r\n                <div className={'row'}>\r\n                    <div className={'col-9'}>\r\n                        <input\r\n                            className={`form-control add-margin3`}\r\n                            onChange={e => this.setState({searchTitle: e.target.value})}\r\n                            value={this.state.searchTitle}/>\r\n                    </div>\r\n                    <div className={'col-3'}>\r\n                        <button className={`btn btn-success btn-block`}\r\n                                onClick={() => this.searchMovies(this.state.searchTitle)}>\r\n                            Search For Movie\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                {this.state.movies !== null &&\r\n\r\n                <ul className={`list-group`}>\r\n                    {\r\n                        this.state.movies.map((movie, i) =>\r\n                            <li className={`list-group-item`} key={i}>\r\n                                <Link to={`/movie/${movie.imdbID}`}>\r\n                                    {movie.Title}\r\n                                    {/*{movie.imdbID}*/}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class MovieListComponent extends React.Component{\r\n\r\n    state={\r\n        movies:[],\r\n        user: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {})\r\n            .then(currentUser => {\r\n                if(currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        movies: currentUser.movieList\r\n                    })\r\n                }\r\n            })\r\n        // fetch(`http://localhost:8080/api/users/${this.state.user.id}/films`)\r\n        //     .then(response => response.json())\r\n        //     .then(moviesList => {\r\n        //         this.setState({\r\n        //             movies: moviesList\r\n        //         }\r\n        //         )\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2> {this.state.user.username} Favorite Movies</h2>\r\n                <br/>\r\n                {console.log(this.props.movieList)}\r\n                <ul className=\"list-group\">\r\n                    {/*<li className=\"list-group-item\">*/}\r\n                    {/*    <label>Movie 1</label>*/}\r\n                    {/*        <button className=\"btn float-right btn-sm white-icon  \"*/}\r\n                    {/*        // onClick={() => {*/}\r\n                    {/*        // this.deleteMovie(movie.id);}}*/}\r\n                    {/*        >*/}\r\n                    {/*            X*/}\r\n                    {/*        </button>*/}\r\n\r\n                    {/*</li>*/}\r\n                    {this.props.user.movieList.map(movie =>\r\n                            <li className=\"list-group-item\">\r\n                                <Link to={`/movie/${movie.imdb}`}>\r\n                                    {movie.name}</Link>\r\n                            </li>\r\n                        )\r\n\r\n\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport ClubMemberListComponent from \"../club-page/ClubMemberListComponent\";\r\nimport HomeAboutComponent from \"./HomeAboutComponent\";\r\nimport ClubListComponent from \"./ClubListComponent\";\r\nimport ClubTabsComponent from \"./ClubTabsComponent\";\r\nimport ClubTaskListComponent from \"./ClubTaskListComponent\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ClubListContainer from \"../../containers/ClubListContainer\";\r\nimport MovieSearchComponent from \"../../search/MovieSearchComponent\";\r\nimport {fetchProfile} from \"../../services/UserServer\";\r\nimport MovieListComponent from \"./MovieListComponent\";\r\n\r\nexport default class HomeComponent extends React.Component {\r\n\r\n    state = {\r\n        userType: '',  //'' member, president\r\n        user: {},\r\n        username: '',\r\n        tab: this.props.match.params.tab  //introduction clublist clublpage movielist search\r\n    }\r\n\r\n    setTabs = (tab) => {\r\n        //console.log(this.props.match.params.tab)\r\n        this.props.history.push(`/home/${tab}`);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({\r\n                        user: currentUser,\r\n                        userType: 'member'\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n            this.setState({\r\n                tab: this.props.match.params.tab\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    //load search page under tabs\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.userType === '' &&\r\n\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                        <button className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarTogglerDemo03\"\r\n                                aria-controls=\"navbarTogglerDemo03\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"col-3\">\r\n\r\n                            <a className=\"navbar-brand\">\r\n                                Home</a>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"collapse navbar-collapse col-7\" id=\"navbarTogglerDemo03\">\r\n\r\n                            <ul className=\"navbar-nav mr-auto float-right\">\r\n                                <li className=\"nav-item active\">\r\n\r\n                                    {\r\n\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"introduction\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('introduction')}\r\n                                            >\r\n                                                Introduction\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"clublist\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('clublist')}\r\n                                            >\r\n                                                Club List\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-1 float-right\">\r\n                            <Link to={'/login'}>\r\n                                <button className=\"float-left btn btn-sm btn-secondary\">\r\n                                    Login\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-1 float-right\">\r\n                            <Link to={'/register'}>\r\n                                <button className=\"float-right btn btn-sm btn-secondary\">\r\n                                    Register\r\n                                </button>\r\n                            </Link>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                }\r\n\r\n                {(this.state.userType === 'member' || this.state.userType === 'president') &&\r\n                <div className=\"container-fluid\">\r\n                    <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n\r\n\r\n                        <button className=\"navbar-toggler\"\r\n                                type=\"button\"\r\n                                data-toggle=\"collapse\"\r\n                                data-target=\"#navbarTogglerDemo03\"\r\n                                aria-controls=\"navbarTogglerDemo03\"\r\n                                aria-expanded=\"false\"\r\n                                aria-label=\"Toggle navigation\">\r\n                            <span className=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n\r\n                        <div className=\"col-3\">\r\n\r\n                            <a className=\"navbar-brand\">\r\n                                {this.state.user.username} Home </a>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"collapse navbar-collapse col-8\" id=\"navbarTogglerDemo03\">\r\n\r\n                            <ul className=\"navbar-nav mr-auto float-right\">\r\n                                {/*<li className=\"nav-item active\">*/}\r\n                                {/*    {*/}\r\n                                {/*        <div>*/}\r\n                                {/*            <a*/}\r\n                                {/*                className={this.state.tab === \"tasks\" ? 'nav-link active' : 'nav-link mouse-pointer'}*/}\r\n                                {/*                onClick={() =>*/}\r\n                                {/*                    this.setTabs('tasks')}*/}\r\n                                {/*            >*/}\r\n                                {/*                Tasks*/}\r\n                                {/*            </a>*/}\r\n\r\n                                {/*        </div>*/}\r\n                                {/*    }*/}\r\n                                {/*</li>*/}\r\n\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"clubpage\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('clubpage')}\r\n                                            >\r\n                                                Club Page\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li className=\"nav-item active\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"movielist\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('movielist')}\r\n                                            >\r\n                                                Movie List\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n                                </li>\r\n\r\n                                <li className=\"nav-item\">\r\n                                    {\r\n                                        <div>\r\n                                            <a\r\n                                                className={this.state.tab === \"search\" ? 'nav-link active' : 'nav-link mouse-pointer'}\r\n                                                onClick={() =>\r\n                                                    this.setTabs('search')}\r\n                                                href={'/search'}\r\n                                            >\r\n                                                Search Movie\r\n                                            </a>\r\n\r\n                                        </div>\r\n                                    }\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n\r\n\r\n                        </div>\r\n\r\n                        {this.state.userType === 'member' &&\r\n                        <div className=\"col-1 float-right\">\r\n\r\n                            <Link to='/profile'>\r\n                                <button className=\"float-right btn btn-lg btn-secondary\">\r\n                                    <i className=\"fa fa-user white-icon\" aria-hidden=\"true\"></i>\r\n                                </button>\r\n                            </Link>\r\n\r\n                        </div>\r\n                        }\r\n\r\n                    </nav>\r\n\r\n\r\n                </div>\r\n                }\r\n\r\n                {this.state.tab === 'introduction' &&\r\n                <div>\r\n                    <HomeAboutComponent/>\r\n                </div>}\r\n\r\n                {(this.state.tab === 'clublist' || this.state.tab === 'clubpage') &&\r\n                <div>\r\n                    {/*<ClubListComponent/>*/}\r\n                    {/*<ClubListContainer {...match}/>*/}\r\n                    <ClubListContainer\r\n                        user={this.state.user}/>\r\n                </div>}\r\n\r\n                {this.state.tab === 'movielist' &&\r\n                <div>\r\n                    <MovieListComponent\r\n                        user={this.state.user}\r\n                    movies={this.state.user.movieList}/>\r\n                </div>}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {updateUser} from \"../../services/UserServer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default class ProfileComponent extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: '',\r\n            email: '',\r\n            gender: '',\r\n            phone: '',\r\n            movieList: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => {\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .catch(e => {\r\n                //todo: go to home page\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .then(user => {\r\n                    this.setState({\r\n                        user: user\r\n                        // username: user.username,\r\n                        // password: user.password,\r\n                        // email: user.email,\r\n                        // phone: user.phone,\r\n                        // gender: user.gender\r\n                    })\r\n            })\r\n    }\r\n\r\n    update = () => {\r\n        fetch(\"http://localhost:8080/api/profile\", {\r\n            body: JSON.stringify(this.state.user),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(user => this.setState({\r\n                username: user.username,\r\n                password: user.password,\r\n                email: user.email,\r\n                phone: user.phone,\r\n                gender: user.gender\r\n                //todo: set successful state like register do\r\n            }))\r\n\r\n    }\r\n\r\n    deleteMovie = (mid) =>{\r\n        //this.props.history.push(`/profile`)\r\n        fetch(`http://localhost:8080/api/films/${mid}`, {\r\n            method: 'DELETE'\r\n        })\r\n            .then(response => response.json())\r\n\r\n    }\r\n\r\n    logout = () => {\r\n        fetch(\"http://localhost:8080/api/logout\", {\r\n            method: 'POST',\r\n            credentials: \"include\"\r\n        })\r\n            .then(response => this.props.history.push(\"/\"))\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                        {console.log(this.state.user)}\r\n                        <h1>Profile {this.state.user.username}</h1>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <Link to={'/home/clubpage'}>\r\n                            <button className=\"btn btn-primary float-right add-margin3\">\r\n                                Home\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                <div className=\"col-2\">\r\n                    <button className=\"btn btn-danger\"\r\n                            onClick={this.logout}>\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        <br/>\r\n        <div className=\"alert alert-success wbdv-message\" role=\"alert\">\r\n            Profile successfully saved\r\n        </div>\r\n        <div className=\"row\">\r\n            <div className=\"col-8\">\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"username\"\r\n                           className=\"col-sm-2 col-form-label\">Username</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               readOnly\r\n                               className=\"form-control wbdv-field wbdv-username\"\r\n                               id=\"username\"\r\n                               placeholder=\"someone\"\r\n                               defaultValue={this.state.user.username}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {\r\n                               //         username: e.target.value\r\n                               //     }\r\n                               // })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"inputPassword\"\r\n                           className=\"col-sm-2 col-form-label\">Password</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"password\"\r\n                               className=\"form-control\"\r\n                               id=\"inputPassword\"\r\n                               placeholder=\"******\"\r\n                               defaultValue={this.state.user.password}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {password: e.target.value}\r\n                               // })}\r\n                               onChange={(e) => {\r\n                                   const newPassword = e.target.value\r\n                                   this.setState(prevState => ({\r\n                                       user: {\r\n                                           ...prevState.user,\r\n                                           password: newPassword\r\n                                       }\r\n                                   }));\r\n                               }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group row\">\r\n\r\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"gender\">Gender</label>\r\n                    <div className=\"custom-control custom-radio custom-control-inline\">\r\n                        <div className=\"col-sm-4 custom-control custom-radio add-margin10\">\r\n                            <input type=\"radio\"\r\n                                   className=\"custom-control-input\"\r\n                                   id=\"male\"\r\n                                   name=\"gender\"\r\n                                   checked={this.state.user.gender === 'male'}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {password: e.target.value}\r\n                                   // })}\r\n                                   onChange={(e) => {\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               gender: 'male'\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                                   defaultValue={'male'}\r\n                            />\r\n                            <label htmlFor=\"male\" className=\"custom-control-label\">Male</label>\r\n                        </div>\r\n                        <div className=\"custom-control float-right col-sm-5 custom-radio\">\r\n                            <input type=\"radio\"\r\n                                   className=\"custom-control-input\"\r\n                                   id=\"female\"\r\n                                   name=\"gender\"\r\n                                   checked={this.state.user.gender === 'female'}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {password: e.target.value}\r\n                                   // })}\r\n                                   onChange={(e) => {\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               gender: 'female'\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                                   defaultValue={'female'}/>\r\n                            <label htmlFor=\"female\" className=\"custom-control-label\">Female</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {  this.state.user.username &&\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"phone\"\r\n                               className=\"col-sm-2 col-form-label\">Phone</label>\r\n                        <div className=\"col-sm-10\">\r\n                            <input type=\"text\"\r\n                                   className=\"form-control wbdv-field wbdv-phone\"\r\n                                   id=\"phone\"\r\n                                   placeholder=\"(xxx)-xxx-xxxx\"\r\n                                   defaultValue={this.state.user.phone}\r\n                                   // onChange={(e) => this.setState({\r\n                                   //     user: {\r\n                                   //         phone: e.target.value\r\n                                   //     }})}\r\n                                   onChange={(e) => {\r\n                                       const newPhone = e.target.value\r\n                                       this.setState(prevState => ({\r\n                                           user: {\r\n                                               ...prevState.user,\r\n                                               phone: newPhone\r\n                                           }\r\n                                       }));\r\n                                   }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <div className=\"form-group row\">\r\n                    <label htmlFor=\"email\"\r\n                           className=\"col-sm-2 col-form-label\">Email</label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input type=\"text\"\r\n                               className=\"form-control wbdv-field wbdv-email\"\r\n                               id=\"email\"\r\n                               placeholder=\"example@gmail.com\"\r\n                               defaultValue={this.state.user.email}\r\n                               // onChange={(e) => this.setState({\r\n                               //     user: {\r\n                               //         email: e.target.value\r\n                               //     }})}\r\n                               onChange={(e) => {\r\n                                   const newEmail = e.target.value\r\n                                   this.setState(prevState => ({\r\n                                       user: {\r\n                                           ...prevState.user,\r\n                                           email: newEmail\r\n                                       }\r\n                                   }));\r\n                               }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"col-4\">\r\n                {/*<ul className=\"list-group wbdv-Club-list d-none d-lg-block\">*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <label>Club 1</label>*/}\r\n                {/*        <button className=\"btn float-right btn-sm white-icon  \">*/}\r\n                {/*            X*/}\r\n                {/*        </button>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <label>Club 2</label>*/}\r\n                {/*        <button className=\"btn float-right btn-sm grey-icon\">*/}\r\n                {/*            X*/}\r\n                {/*        </button>*/}\r\n                {/*    </li>*/}\r\n                {/*    <li className=\"list-group-item\">*/}\r\n                {/*        <div className=\"input-group input-group-sm\">*/}\r\n                {/*            <input type=\"text\"*/}\r\n                {/*                   className=\"form-control\"*/}\r\n                {/*                   placeholder=\"Add New Club\"/>*/}\r\n                {/*            <button className=\"btn float-right btn-sm grey-icon\">*/}\r\n                {/*                <i className=\"fa fa-plus -add-btn\"*/}\r\n                {/*                   aria-hidden=\"true\"></i>*/}\r\n                {/*            </button>*/}\r\n\r\n                {/*        </div>*/}\r\n\r\n                {/*    </li>*/}\r\n                {/*</ul>*/}\r\n\r\n                {/*<br/>*/}\r\n                <h2>Favorite Movies</h2>\r\n                {console.log(this.state.user.movieList)}\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        this.state.user.movieList.map(movie =>\r\n                        <li className=\"list-group-item\">\r\n                            <Link to={`/movie/${movie.imdb}`}>\r\n                                {movie.name}\r\n                            </Link>\r\n                        {/*    <button className=\"btn float-right btn-sm white-icon  \"*/}\r\n                        {/*    onClick={() => {*/}\r\n                        {/*    this.deleteMovie(movie.id);*/}\r\n                        {/*}}>*/}\r\n                        {/*        X*/}\r\n                        {/*    </button>*/}\r\n                        </li>\r\n                        )\r\n                    }\r\n                    <li className=\"list-group-item\">\r\n                            <Link to={'search'}>\r\n                            <button className=\"btn btn-primary float-right btn-sm \">\r\n                                Search and add New Movie\r\n                            </button>\r\n                            </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <br/>\r\n\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label\"></label>\r\n            <div className=\"col-sm-10 \">\r\n                <button className=\"btn btn-success form-control\"\r\n                       //onClick={this.update()}\r\n                >\r\n                    Update\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label\"></label>\r\n            <div className=\"col-sm-10\">\r\n                <button className=\"btn btn-danger form-control\">\r\n                    Delete User\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n    );\r\n    }\r\n\r\n    }\r\n\r\n\r\n","import React from \"react\";\r\nimport {fetchProfile} from \"../services/UserServer\";\r\n\r\nexport default class MovieDetailsComponent extends React.Component {\r\n\r\n    // http://www.omdbapi.com/?i=tt3896198&apikey=68d96315\r\n    state = {\r\n        movie: {},\r\n        liked: false,\r\n        user: {},\r\n        username: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const imdbID = this.props.match.params.imdbID\r\n        fetch(`http://www.omdbapi.com/?i=${imdbID}&apikey=68d96315`)\r\n            .then(response => response.json())\r\n            .then(movie => {\r\n                console.log(typeof movie.Actors)\r\n                this.setState({\r\n                    movie: movie\r\n                })\r\n            })\r\n\r\n        fetchProfile()\r\n            .catch(e => {\r\n            })\r\n            .then(currentUser => {\r\n                if (currentUser) {\r\n                    this.setState({user: currentUser})\r\n                }\r\n            })\r\n    }\r\n\r\n    addMovie = (userid, newMovie) => {\r\n        this.props.history.push(`/search/${newMovie.name}`)\r\n            fetch(`http://localhost:8080/api/users/${userid}/films`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(newMovie),\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n    }\r\n\r\n    // searchMovies = (title) => {\r\n    //     this.props.history.push(`/search/${title}`)\r\n    //     fetch(`http://www.omdbapi.com/?s=${title}&apikey=68d96315`)\r\n    //         .then(response => response.json())\r\n    //         .then(results => {\r\n    //                 this.setState({\r\n    //                     movies: results.Search\r\n    //                 })\r\n    //                 if (results !== null) {\r\n    //                     this.setState({\r\n    //                         error: 'Unable to find movie'\r\n    //                     })\r\n    //                 }\r\n    //             }\r\n    //         )\r\n    //\r\n    // }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n               <button\r\n               onClick={() => {\r\n                   this.addMovie(\r\n                       this.state.user.id,\r\n                       {\r\n                           name: this.state.movie.Title\r\n                       })\r\n               }}>\r\n                   Add to Favorite Movie List\r\n               </button>\r\n                <h2>\r\n                    Movie Details {this.props.match.params.imdbID} {this.state.user.username}\r\n                </h2>\r\n                <h3>{this.state.movie.Title}</h3>\r\n                <p>Directed by: {this.state.movie.Director}</p>\r\n                <p>{this.state.movie.Plot}</p>\r\n                <h4>Cast</h4>\r\n                {this.state.movie.Actors}\r\n                <ul>\r\n                    {\r\n                        this.state.movie.Actors && this.state.movie.Actors.split(',').map((actor, index) =>\r\n                            <li key={index}>{actor}</li>\r\n                        )\r\n                    }\r\n                </ul>\r\n                <img src={this.state.movie.Poster}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport OriginHomeComponent from \"./OriginHomeComponent\";\r\nimport ClubListComponent from \"./home/ClubListComponent\";\r\nimport ClubPageComponent from \"./club-page/ClubPageComponent\";\r\nimport ClubLoginComponent from \"./login/ClubLoginComponent\";\r\nimport RegisterComponent from \"./register/RegisterComponent\";\r\nimport ClubMemberListComponent from \"./club-page/ClubMemberListComponent\";\r\nimport LeaderWorksiteComponent from \"./worksite/LeaderWorksiteComponent\";\r\nimport DesignCLubHomePageComponent from \"./ClubPageSetting/DesignCLubHomePageComponent\";\r\nimport HomeComponent from \"./home/HomeComponent\";\r\nimport ProfileComponent from \"./profile/ProfileComponent\";\r\nimport MovieDetailsComponent from \"../search/MovieDetailsComponent\";\r\nimport MovieSearchComponent from \"../search/MovieSearchComponent\";\r\n\r\n\r\nclass WhiteBoard extends React.Component {\r\n    render() {\r\n        return(\r\n            <BrowserRouter>\r\n                <div className=\"container-fluid\">\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={OriginHomeComponent}*/}\r\n                    {/*/>*/}\r\n\r\n                    <Route\r\n                        path={['/home/:tab', '/home/introduction','/']}\r\n                        exact={true}\r\n                        component={HomeComponent}\r\n                    />\r\n\r\n                    <Route\r\n                        path='/login'\r\n                        exact={true}\r\n                        component={ClubLoginComponent}/>\r\n\r\n                    <Route\r\n                        path='/register'\r\n                        exact={true}\r\n                        component={RegisterComponent}/>\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/club-list'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={ClubListComponent}/>*/}\r\n\r\n                    <Route\r\n                        path={['/club-page/:tab', '/club-page/:clubId/:tab']}\r\n                        exact={true}\r\n                        component={ClubPageComponent}/>\r\n\r\n                    <Route\r\n                        path={['/profile', '/profile/:userId']}\r\n                        exact={true}\r\n                        component={ProfileComponent}/>\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/member-list'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={ClubMemberListComponent}/>*/}\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/leader-worksite'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={LeaderWorksiteComponent}/>*/}\r\n\r\n                    {/*<Route*/}\r\n                    {/*    path='/:tabs/setting'*/}\r\n                    {/*    exact={true}*/}\r\n                    {/*    component={DesignCLubHomePageComponent}/>*/}\r\n\r\n\r\n\r\n                    <Route\r\n                        path={`/search`}\r\n                        exact={true}\r\n                        component={MovieSearchComponent}/>\r\n\r\n                    <Route\r\n                        path={`/search/:searchTitle`}\r\n                        exact={true}\r\n                        component={MovieSearchComponent}/>\r\n\r\n                    <Route\r\n                        path={`/movie/:imdbID`}\r\n                        exact={true}\r\n                        component={MovieDetailsComponent}/>\r\n\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WhiteBoard\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport WhiteBoard from \"./components/WhiteBoard\";\n\nfunction App() {\n  return (\n      <WhiteBoard/>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    newEventTitle: 'New Event',\r\n    events: []\r\n}\r\n\r\nconst EventReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"FIND_EVENTS_FOR_CLUB\":\r\n            console.log(action.actualEvents)\r\n            return {\r\n                ...state,\r\n                events: action.actualEvents\r\n            }\r\n        case \"CREATE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.newEvent]\r\n            }\r\n        case \"DELETE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event.id !== action.eventId)\r\n            }\r\n        case \"UPDATE_EVENT\":\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    event => event.id === action.updatedEvent.id ?\r\n                        action.updatedEvent : event )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default EventReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {combineReducers, createStore} from \"redux\";\nimport ClubReducer from \"./reducer/ClubReducer\";\nimport EventReducer from \"./reducer/EventReducer\";\nimport {Provider, connect} from \"react-redux\"\n\n\n\nconst reducers = combineReducers({\n    ClubReducer, EventReducer\n})\nconst store = createStore(reducers)\n// const store = createStore(ClubReducer)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n"],"sourceRoot":""}